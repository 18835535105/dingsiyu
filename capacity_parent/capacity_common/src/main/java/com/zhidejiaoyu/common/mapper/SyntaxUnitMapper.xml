<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidejiaoyu.common.mapper.SyntaxUnitMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.SyntaxUnit">
        <id column="id" property="id"/>
        <result column="course_id" property="courseId"/>
        <result column="unit_name" property="unitName"/>
        <result column="joint_name" property="jointName"/>
        <result column="unit_index" property="unitIndex"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="more_table_sql">
        su.id, su.course_id, su.unit_name, su.joint_name, su.unit_index, su.update_time
    </sql>

    <sql id="base_sql">
        id, course_id, unit_name, joint_name, unit_index, update_time
    </sql>

    <select id="selectUnitIdByCourseId" resultType="long" parameterType="long">
        select id
        from syntax_unit
        where course_id = #{courseId}
    </select>
    <select id="selectMaxUnitIdByUnitId" resultType="java.lang.Long" parameterType="map">
        select Max(id)
        from syntax_unit
        where course_id = (select course_id from syntax_unit where id = #{unitId} limit 1)
    </select>
    <select id="selectCourseIdByUnitId" resultType="java.lang.Long" parameterType="map">
        select course_id
        from syntax_unit
        where id = #{unitId}
        limit 1
    </select>
    <select id="selectIdLikeJointName" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="base_sql"/>
        from syntax_unit
        where joint_name like concat('%', #{jointName}, '%')
    </select>
    <select id="selectNextUnitByCourseId" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="base_sql"/>
        from syntax_unit
        where course_id = #{courseId}
        and id > #{unitId}
        order by id desc
        limit 1
    </select>

</mapper>
