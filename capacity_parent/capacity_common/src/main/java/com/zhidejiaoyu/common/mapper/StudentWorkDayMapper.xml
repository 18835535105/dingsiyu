<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidejiaoyu.common.mapper.StudentWorkDayMapper" >
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.StudentWorkDay">
        <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="work_day_begin" property="workDayBegin" jdbcType="VARCHAR" />
    <result column="work_day_end" property="workDayEnd" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, student_id, work_day_begin, work_day_end
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhidejiaoyu.common.pojo.StudentWorkDayExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_work_day
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from student_work_day
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from student_work_day
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhidejiaoyu.common.pojo.StudentWorkDayExample" >
    delete from student_work_day
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhidejiaoyu.common.pojo.StudentWorkDay" >
    insert into student_work_day (id, student_id, work_day_begin, 
      work_day_end)
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{workDayBegin,jdbcType=VARCHAR}, 
      #{workDayEnd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhidejiaoyu.common.pojo.StudentWorkDay" >
    insert into student_work_day
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="workDayBegin != null" >
        work_day_begin,
      </if>
      <if test="workDayEnd != null" >
        work_day_end,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="workDayBegin != null" >
        #{workDayBegin,jdbcType=VARCHAR},
      </if>
      <if test="workDayEnd != null" >
        #{workDayEnd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <insert id="insertList" parameterType="map">
        insert into student_work_day (student_id, work_day_begin,
        work_day_end)
        values
        <foreach collection="days" item="day" separator=",">
            (#{day.studentId,jdbcType=BIGINT}, #{day.workDayBegin,jdbcType=VARCHAR},
            #{day.workDayEnd,jdbcType=VARCHAR})
        </foreach>

    </insert>
    <select id="countByExample" parameterType="com.zhidejiaoyu.common.pojo.StudentWorkDayExample"
            resultType="java.lang.Integer">
    select count(*) from student_work_day
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectPreviousWorkDay" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from student_work_day where student_id = #{studentId} order by work_day_begin desc limit 1,1
    </select>
    <select id="selectEndTimeLessThanNow" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM student_work_day
        WHERE work_day_end &lt;= now();
    </select>
    <select id="selectAfterSevenDay" resultType="java.lang.String">
        SELECT c.`day`
        FROM (SELECT id, `day` FROM calendar WHERE type = 0
                                               AND `day` &gt;= NOW() LIMIT 7) c
        ORDER BY c.id DESC
        LIMIT 1
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update student_work_day
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.workDayBegin != null" >
        work_day_begin = #{record.workDayBegin,jdbcType=VARCHAR},
      </if>
      <if test="record.workDayEnd != null" >
        work_day_end = #{record.workDayEnd,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student_work_day
    set id = #{record.id,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=BIGINT},
      work_day_begin = #{record.workDayBegin,jdbcType=VARCHAR},
      work_day_end = #{record.workDayEnd,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhidejiaoyu.common.pojo.StudentWorkDay" >
    update student_work_day
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="workDayBegin != null" >
        work_day_begin = #{workDayBegin,jdbcType=VARCHAR},
      </if>
      <if test="workDayEnd != null" >
        work_day_end = #{workDayEnd,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhidejiaoyu.common.pojo.StudentWorkDay" >
    update student_work_day
    set student_id = #{studentId,jdbcType=BIGINT},
      work_day_begin = #{workDayBegin,jdbcType=VARCHAR},
      work_day_end = #{workDayEnd,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateList" parameterType="map">
        update student_work_day
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="student_id =case" suffix="end,">
                <foreach collection="days" item="item" index="index">
                    <if test="item.studentId !=null">
                        when id=#{item.id} then #{item.studentId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="work_day_begin =case" suffix="end,">
                <foreach collection="days" item="item" index="index">
                    <if test="item.workDayBegin !=null">
                        when id=#{item.id} then #{item.workDayBegin}
                    </if>
                </foreach>
            </trim>
            <trim prefix="work_day_end =case" suffix="end,">
                <foreach collection="days" item="item" index="index">
                    <if test="item.workDayEnd !=null">
                        when id=#{item.id} then #{item.workDayEnd}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="days" index="index" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
</mapper>