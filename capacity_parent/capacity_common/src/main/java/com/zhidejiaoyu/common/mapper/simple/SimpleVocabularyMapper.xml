<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
        namespace="com.zhidejiaoyu.common.mapper.simple.SimpleVocabularyMapper">
    <resultMap id="BaseResultMap"
               type="com.zhidejiaoyu.common.pojo.Vocabulary">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="word" property="word" jdbcType="VARCHAR"/>
        <result column="word_chinese" property="wordChinese"
                jdbcType="VARCHAR"/>
        <result column="example_english" property="exampleEnglish"
                jdbcType="VARCHAR"/>
        <result column="example_chinese" property="exampleChinese"
                jdbcType="VARCHAR"/>
        <result column="explain_" property="explain_"
                jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime"
                jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime"
                jdbcType="TIMESTAMP"/>
        <result column="course_unit" property="courseUnit"
                jdbcType="VARCHAR"/>
        <result column="syllable" property="syllable"
                jdbcType="VARCHAR"/>
        <result column="delStatus" property="delStatus"
                jdbcType="VARCHAR"/>
        <result column="sound_mark" property="soundMark"
                jdbcType="VARCHAR"/>
        <result column="read_url" property="readUrl"
                jdbcType="VARCHAR"/>
        <result column="small_picture_url" property="smallPictureUrl"/>
        <result column="middle_picture_url" property="middlePictureUrl"/>
        <result column="high_picture_url" property="highPictureUrl"/>
    </resultMap>
    <sql id="insertWord_sql">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <!-- <if test="id != null" > id, </if> -->
            <if test="word != null">
                word,
            </if>
            <if test="wordChinese != null">
                word_chinese,
            </if>
            <if test="exampleEnglish != null">
                example_english,
            </if>
            <if test="exampleChinese != null">
                example_chinese,
            </if>
            <if test="explain_ != null">
                explain_,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="courseUnit != null">
                course_unit,
            </if>

            <if test="centreExample != null">
                centreExample,
            </if>
            <if test="centreTranslate != null">
                centreTranslate,
            </if>
            <if test="tallExample != null">
                tallExample,
            </if>
            <if test="tallTranslate != null">
                tallTranslate,
            </if>
            <!-- <if test="classify != null" > classify, </if> -->
            <if test="upage != null">
                upage,
            </if>
            <if test="match != null">
                `match`,
            </if>
            <if test="think != null">
                think,
            </if>
            <if test="record != null">
                record,
            </if>
            <if test="recordpicname != null">
                recordpicname,
            </if>
            <if test="recordpicurl != null">
                recordpicurl,
            </if>
            <if test="discriminate != null">
                discriminate,
            </if>
            <if test="syllable != null">
                syllable,
            </if>
            <if test="delStatus != null">
                delStatus,
            </if>
            <if test="soundMark != null">
                sound_mark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="word != null">
                #{word,jdbcType=VARCHAR},
            </if>
            <if test="wordChinese != null">
                #{wordChinese,jdbcType=VARCHAR},
            </if>
            <if test="exampleEnglish != null">
                #{exampleEnglish,jdbcType=VARCHAR},
            </if>
            <if test="exampleChinese != null">
                #{exampleChinese,jdbcType=VARCHAR},
            </if>
            <if test="explain_ != null">
                #{explain_,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="courseUnit != null">
                #{courseUnit,jdbcType=VARCHAR},
            </if>

            <if test="centreExample != null">
                #{centreExample},
            </if>
            <if test="centreTranslate != null">
                #{centreTranslate},
            </if>
            <if test="tallExample != null">
                #{tallExample},
            </if>
            <if test="tallTranslate != null">
                #{tallTranslate},
            </if>
            <!-- <if test="classify != null" > #{classify}, </if> -->
            <if test="upage != null">
                #{upage},
            </if>
            <if test="match != null">
                #{match},
            </if>
            <if test="think != null">
                #{think},
            </if>
            <if test="record != null">
                #{record},
            </if>
            <if test="recordpicname != null">
                #{recordpicname},
            </if>
            <if test="recordpicurl != null">
                #{recordpicurl},
            </if>
            <if test="discriminate != null">
                #{discriminate},
            </if>
            <if test="syllable != null">
                #{syllable},
            </if>
            <if test="delStatus != null">
                #{delStatus},
            </if>
            <if test="soundMark != null">
                #{soundMark},
            </if>
        </trim>
    </sql>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, word, word_chinese, example_english, example_chinese,
        explain_,
        create_time,
        update_time, course_unit, syllable, delStatus, sound_mark, read_url,
        small_picture_url, middle_picture_url, high_picture_url
    </sql>

    <!-- 多表查询返回结果 -->
    <sql id="unite_Column_List">
        v.id, v.word, v.word_chinese, v.example_english,
        v.example_chinese,
        v.explain_,
        v.create_time,
        v.update_time,
        v.course_unit,
        v.syllable, v.delStatus, v.recordpicurl, v.sound_mark, v.read_url,
        v.small_picture_url, v.middle_picture_url, v.high_picture_url
    </sql>

    <!-- 根据学生id查询当前单元下指定模块的所有生词/熟词 -->
    <select id="selectUnknownWordByUnitId" resultMap="BaseResultMap"
            parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v,learn l where v.id =
        l.vocabulary_id and
        v.delStatus =
        1 and l.study_model = #{studyModel}
        and l.student_id=#{studentId} and
        l.unit_id=#{unitId}
        <if test="studyModel == '单词图鉴'">
            and v.recordpicurl is not null
        </if>
        <if test="condition == 2">
            -- 生词
            and l.`status` = 0
        </if>
        <if test="condition == 3">
            -- 熟词
            and l.`status` = 1
        </if>
    </select>

    <!-- 获取当前单元下的所有单词信息(不含删除的单词) -->
    <select id="selectByUnitId" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary
        v, unit_vocabulary_new uv
        where uv.unit_id = #{unitId}
        AND v.id
        =
        uv.vocabulary_id AND v.delStatus = 1 limit 20
    </select>

    <select id="selectByWordIds" parameterType="java.util.List"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vocabulary
        where id in
        <foreach collection="ids" open="(" close=")" separator=","
                 item="item">
            #{item}
        </foreach>
        and delStatus = 1
        order by id desc
    </select>


    <insert id="wordAdd" parameterType="com.zhidejiaoyu.common.pojo.Vocabulary"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into vocabulary
        <include refid="insertWord_sql"/>
    </insert>

    <resultMap id="pageMap"
               type="com.zhidejiaoyu.common.pojo.Vocabulary">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <!-- <result column="" property="wordid" /> -->
        <result column="word" property="word"/>
        <result column="word_chinese" property="wordChinese"/>
        <!-- <result column="explain_" property="explain_" /> -->
        <!-- <result column="example_english" property="exampleEnglish" /> -->
        <!-- <result column="example_chinese" property="exampleChinese" /> -->
        <!-- <result column="joint_name" property="joint_name" /> -->

        <result column="upage" property="upage"/>
        <result column="`match`" property="match"/>
        <result column="think" property="think"/>
        <result column="record" property="record"/>
        <result column="discriminate" property="discriminate"/>
        <result column="centreExample" property="centreExample"/>
        <result column="centreTranslate" property="centreTranslate"/>
        <result column="tallExample" property="tallExample"/>
        <result column="tallTranslate" property="tallTranslate"/>
        <result column="recordpicurl" property="recordpicurl"/>
        <result column="explain_" property="explain_"/>
        <result column="classify" property="strClassify"/>
    </resultMap>
    <select id="page" parameterType="com.zhidejiaoyu.common.pojo.Vocabulary" resultMap="pageMap">
        select
        a.joint_name,
        c.id,c.word,c.word_chinese,c.syllable,c.delStatus,
        c.upage ,c.match ,c.think,
        c.record, c.discriminate,
        c.classify,
        c.centreExample, c.centreTranslate, c.tallExample, c.tallTranslate,
        c.explain_
        from unit_new a INNER JOIN unit_vocabulary_new b on a.id = b.unit_id
        INNER JOIN vocabulary c on b.vocabulary_id = c.id
        <where>
            <if test="course_id != null and course_id != '' ">
                and a.course_id = #{course_id}
            </if>
            <if test="word != null and word != '' ">
                and c.word like '%${word}%'
            </if>
            <if test="wordChinese != null and wordChinese != '' ">
                and c.word_chinese = #{wordChinese}
            </if>
        </where>
        GROUP BY c.id order by c.id desc
    </select>

    <select id="mapSelectVocabulary" parameterType="String"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vocabulary where id = #{id}
    </select>

    <!-- 根据id更改词汇 -->
    <update id="wordUpdate" parameterType="com.zhidejiaoyu.common.pojo.Vocabulary">
        update vocabulary
        set
        word = #{word},
        word_chinese = #{wordChinese},
        syllable = #{syllable},
        centreExample = #{centreExample},
        centreTranslate = #{centreTranslate},
        tallExample = #{tallExample},
        tallTranslate = #{tallTranslate},
        upage =
        #{upage},
        `match` = #{match},
        think = #{think},
        record = #{record},
        discriminate = #{discriminate},
        <if test="recordpicurl != null and recordpicurl != '' ">
            recordpicurl = #{recordpicurl},
        </if>
        explain_ = #{explain_},
        delStatus = #{delStatus}

        where id = #{id}
    </update>

    <delete id="delUnit_vocabulary" parameterType="com.zhidejiaoyu.common.pojo.UnitVocabulary">
        delete
        from unit_vocabulary_new
        where vocabulary_id = #{vocabularyId} ${str}
    </delete>

    <select id="showWord" parameterType="map" resultMap="BaseResultMap">
        SELECT uv.unit_id,
               v.id,
               v.word,
               uv.word_chinese,
               v.syllable
        FROM vocabulary v,
             unit_vocabulary_new uv
        WHERE v.id = uv.vocabulary_id
          AND uv.unit_id = #{unit_id}
          AND v.delStatus = 1
          AND v.id NOT IN (
            SELECT l1.vocabulary_id
            FROM learn l1
            WHERE l1.student_id = #{id}
              AND l1.unit_id = #{unit_id}
              AND l1.study_model = '慧听写')
        LIMIT 0, 1
    </select>
    <select id="countByCourseId" resultType="java.lang.Integer" parameterType="map">
        select count(uv.vocabulary_id)
        from vocabulary v, unit_vocabulary_new uv, unit_new u
        where v.id = uv.vocabulary_id and v.delStatus = 1
        and uv.unit_id = u.id and u.course_id = #{courseId}
        <if test="flag == 1">
            and v.recordpicurl is not null
        </if>
    </select>

    <select id="pageWord" parameterType="map" resultMap="pageMap">
        select
        id, word, word_chinese, explain_, classify, `match`, think, upage, record, discriminate, syllable, delStatus
        from
        vocabulary
        <where>
            <if test="word != null and word != '' ">
                word like concat(concat('%',#{word}), '%')
            </if>
        </where>
        order by id desc
    </select>
    <select id="selectByStudentPhase" resultMap="BaseResultMap" parameterType="map">
        SELECT
        DISTINCT
        <include refid="unite_Column_List"/>
        FROM
        vocabulary v,
        unit_vocabulary_new uv,
        course_new c,
        unit_new u
        WHERE
        v.id = uv.vocabulary_id
        AND uv.unit_id = u.id
        AND u.course_id = c.id
        AND v.delStatus = 1
        AND c.delStatus = 1
        AND u.delStatus = 1
        AND c.version = #{student.version}
        <if test="flag == 1">
            AND c.grade = '七年级'
        </if>
        <if test="flag == 2">
            AND c.grade = '高一'
        </if>
        <if test="flag == 3">
            AND c.grade = '高中'
            AND c.label = '必修1'
        </if>
    </select>
    <!--类型区分-->
    <sql id="study_model_sql">
        <if test="model == 0">
            and study_model = '单词图鉴'
        </if>
        <if test="model == 1">
            and study_model = '慧记忆'
        </if>
        <if test="model == 2">
            and study_model = '慧听写'
        </if>
        <if test="model == 3">
            and study_model = '慧默写'
        </if>
        <if test="model == 4">
            and study_model = '例句听力'
        </if>
        <if test="model == 5">
            and study_model = '例句翻译'
        </if>
        <if test="model == 6">
            and study_model = '例句默写'
        </if>
    </sql>
    <sql id="countCourseStudyModel_sql">
        <if test="model == 0 or model == 1 or model == 2 or model == 3">
            example_id IS NULL
        </if>
        <if test="model == 4 or model == 5 or model == 6">
            vocabulary_id IS NULL
        </if>
    </sql>
    <select id="countUnitWeek" parameterType="map" resultType="Integer">
        SELECT COUNT(*) FROM unit_new a JOIN unit_vocabulary_new b ON a.id = b.unit_id AND a.course_id = #{course_id}
        AND a.id =
        (select MAX(unit_id) from learn where student_id = #{studentId} AND course_id = #{course_id}
        <include refid="study_model_sql"/>
        AND<include refid="countCourseStudyModel_sql"/>)
    </select>
    <select id="selectSyllableByWordId" resultType="java.util.Map" parameterType="map">
        SELECT
        v.id id,
        v.syllable syllable
        FROM
        vocabulary v
        WHERE
        v.id IN (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
    </select>
    <select id="selectOneWordNotInIds" resultType="com.zhidejiaoyu.common.pojo.Vocabulary" parameterType="map">
        SELECT
        <include refid="unite_Column_List"/>
        FROM
        vocabulary v,
        unit_vocabulary_new uv
        WHERE
        v.delStatus = 1
        AND uv.vocabulary_id = v.id
        AND uv.unit_id = #{unitId}
        <if test="wordIds.size > 0">
            AND v.id NOT IN (
            <foreach collection="wordIds" item="id" separator=",">
                #{id}
            </foreach>
            )
        </if>
        ORDER BY
        v.id ASC
        LIMIT 1;
    </select>
    <select id="selectIdsByWord" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from vocabulary where word = #{word}
    </select>
    <select id="selectByCourseId" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v, unit_vocabulary_new uv, unit_new u
        WHERE v.delStatus = 1 AND v.id = uv.vocabulary_id AND u.id = uv.unit_id AND
        u.course_id = #{courseId}
    </select>
    <select id="selectUnknownWordByCourseId" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v,learn l where v.id =
        l.vocabulary_id and
        v.delStatus = 1
        and l.student_id=#{studentId} and
        l.course_id=#{courseId}
        <if test="condition == 2">
            -- 生词
            and l.`status` = 0
        </if>
        <if test="condition == 3">
            -- 熟词
            and l.`status` = 1
        </if>
    </select>

    <select id="selectUnknownWordByCourseIds" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v,learn l where v.id =
        l.vocabulary_id and
        v.delStatus = 1
        and l.student_id=#{studentId}
        <if test="courseIds.size > 0">
            and l.course_id in (
            <foreach collection="courseIds" item="id" separator=",">
                #{id}
            </foreach>
            )
        </if>

        <if test="condition == 2">
            -- 生词
            and l.`status` = 0
        </if>
        <if test="condition == 3">
            -- 熟词
            and l.`status` = 1
        </if>
    </select>

    <select id="selectUnlearnedByCourseIds" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM
        unit_vocabulary_new uv,
        vocabulary v,
        unit_new u
        WHERE
        v.id = uv.vocabulary_id
        AND v.delStatus = 1
        AND u.id = uv.unit_id
        <if test="courseIds.size > 0">
            AND u.course_id in (
            <foreach collection="courseIds" separator="," item="id">
                #{id}
            </foreach>
            )
        </if>
        AND uv.vocabulary_id NOT IN (
        SELECT
        l.vocabulary_id
        FROM
        learn l
        WHERE
        l.student_id = #{studentId}
        AND l.vocabulary_id = v.id
        <if test="courseIds.size > 0">
            AND l.course_id in (
            <foreach collection="courseIds" separator="," item="id">
                #{id}
            </foreach>
            )
        </if>
        )
    </select>

    <select id="selectUnitIdsNotInIds" resultType="java.lang.Long" parameterType="map">
        select unit_id
        from unit_vocabulary_new
        where vocabulary_id = #{nv.vocabularyId} ${nv.str}
    </select>

    <select id="pagePicNotNull" parameterType="com.zhidejiaoyu.common.pojo.Vocabulary" resultMap="pageMap">
        select
        a.joint_name,
        c.id,c.word,c.word_chinese,c.syllable,c.delStatus,
        c.upage ,c.match ,c.think,
        c.record, c.discriminate,
        c.classify,
        c.centreExample, c.centreTranslate, c.tallExample, c.tallTranslate,
        c.explain_
        from unit_new a INNER JOIN unit_vocabulary_new b on a.id = b.unit_id
        INNER JOIN vocabulary c on b.vocabulary_id = c.id
        <where>
            c.recordpicurl is not null
            <if test="course_id != null and course_id != '' ">
                and a.course_id = #{course_id}
            </if>
            <if test="word != null and word != '' ">
                and c.word like '%${word}%'
            </if>
            <if test="wordChinese != null and wordChinese != '' ">
                and c.word_chinese = #{wordChinese}
            </if>
        </where>
        GROUP BY c.id order by c.id desc
    </select>
    <select id="pageWordPicNotNull" parameterType="map" resultMap="pageMap">
        select
        id, word, word_chinese, explain_, classify, `match`, think, upage, record, discriminate, syllable, delStatus
        from
        vocabulary
        <where>
            recordpicurl is not null
            <if test="word != null and word != '' ">
                and word like '%${word}%'
            </if>
        </where>
        order by id desc
    </select>
    <select id="getWordIdByCourse" resultType="map" parameterType="map">
        SELECT a.id,
               a.word,
               a.word_chinese,
               a.recordpicurl
        FROM vocabulary a
                 JOIN unit_vocabulary_new b ON a.id = b.vocabulary_id
                 JOIN unit_new c ON b.unit_id = c.id
            AND recordpicurl IS NOT NULL
            AND a.delStatus = 1
            AND b.unit_id &lt;&gt; #{unidId}
            AND a.id &lt;&gt; #{correctWordId}
            AND course_id = #{courseId}
        ORDER BY rand()
        LIMIT 3
    </select>
    <select id="getNotNeedReviewWord" resultType="java.util.Map" parameterType="map">
        SELECT v.id,
               v.word,
               uv.word_chinese,
               v.recordpicurl
        FROM vocabulary v,
             unit_vocabulary_new uv
        WHERE v.id = uv.vocabulary_id
          AND uv.unit_id = #{unitId}
          AND v.recordpicurl is not NULL
          AND v.delStatus = 1
          AND v.id NOT IN (
            SELECT l1.vocabulary_id
            FROM learn l1
            WHERE l1.student_id = #{studentId}
              AND l1.unit_id = #{unitId}
              AND l1.study_model = '单词图鉴')
        LIMIT 0, 1
    </select>

    <select id="getWordPicAll" resultMap="BaseResultMap" parameterType="map">
        select b.id, b.word, a.word_chinese, b.recordpicurl
        from unit_vocabulary_new a
                 join vocabulary b on a.vocabulary_id = b.id
            and a.unit_id = #{unitId} and b.recordpicurl is not null and b.delStatus = 1;
    </select>
    <select id="getWordIdByCourseAll" resultMap="BaseResultMap" parameterType="map">
        SELECT a.id,
               a.word,
               a.word_chinese,
               a.recordpicurl
        FROM vocabulary a
                 JOIN unit_vocabulary_new b ON a.id = b.vocabulary_id
                 JOIN unit_new c ON b.unit_id = c.id
            AND recordpicurl IS NOT NULL
            AND a.delStatus = 1
            AND course_id = #{courseId}
    </select>
    <select id="getWordIdByAll" resultMap="BaseResultMap" parameterType="map">
        select id, word, word_chinese, recordpicurl
        from vocabulary
        where recordpicurl is not NULL
        ORDER BY RAND()
        LIMIT ${size}
    </select>
    <select id="getWordIdByUnit" resultType="java.util.Map" parameterType="map">
        SELECT a.id,
               a.word,
               a.word_chinese,
               a.recordpicurl
        FROM vocabulary a
                 JOIN unit_vocabulary_new b ON a.id = b.vocabulary_id
            AND recordpicurl IS NOT NULL
            AND a.delStatus = 1
            AND a.id &lt;&gt; #{id}
            AND b.unit_id = #{unitId}
        ORDER BY rand()
        LIMIT 3
    </select>
    <select id="selectByUnitIdAndStudyModel" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary
        v, unit_vocabulary_new uv
        where uv.unit_id = #{unitId}
        AND v.id = uv.vocabulary_id AND v.delStatus = 1
        <if test="studyModel == '单词图鉴'">
            AND v.recordpicurl IS NOT NULL
        </if>
    </select>
    <select id="getMemoryWordPicAll" resultMap="BaseResultMap" parameterType="map">
        select b.id, b.word, b.word_chinese, b.recordpicurl
        from capacity_picture a
                 JOIN vocabulary b ON a.vocabulary_id = b.id
            AND a.student_id = #{studentId} AND a.unit_id = #{unit_id} AND a.push &lt; #{data} and
                                      a.memory_strength &lt; 1 AND b.delStatus = 1
    </select>
    <select id="selectWordChineseByVersionAndWordId" resultType="java.lang.String" parameterType="map">
        SELECT DISTINCT
        uv.word_chinese
        FROM
        vocabulary v,
        unit_vocabulary_new uv,
        course_new c,
        unit_new u
        WHERE
        v.id = uv.vocabulary_id
        AND uv.unit_id = u.id
        AND u.course_id = c.id
        AND v.delStatus = 1
        AND c.delStatus = 1
        AND u.delStatus = 1
        AND c.version = #{version}
        <if test="phase == '初中'">
            AND c.grade = '七年级'
        </if>
        <if test="phase == '高中'">
            AND c.grade = '高一'
        </if>
        AND v.id = #{wordId}
        LIMIT 1;
    </select>

    <!-- 精简版 -->
    <!-- '1:单词辨音; 2:词组辨音; 3:快速单词; 4:快速词组; 5:词汇考点; 6:快速句型; 7:语法辨析; 8单词默写; 9:词组默写;', -->
    <sql id="simple_test_type">
        <if test="type == 1">
            "单词辨音"
        </if>
        <if test="type == 2">
            "词组辨音"
        </if>
        <if test="type == 3">
            "快速单词"
        </if>
        <if test="type == 4">
            "快速词组"
        </if>
        <if test="type == 5">
            "词汇考点"
        </if>
        <if test="type == 6">
            "快速句型"
        </if>
        <if test="type == 7">
            "语法辨析"
        </if>
        <if test="type == 8">
            "单词默写"
        </if>
        <if test="type == 9">
            "词组默写"
        </if>
    </sql>
    <resultMap id="simpleCapacityVoResultMap" type="com.zhidejiaoyu.common.vo.simple.SimpleCapacityVo">
        <result column="unit_id" property="unit_id"/>
        <result column="id" property="id"/>
        <result column="word" property="word"/>
        <result column="word_chinese" property="word_chinese"/>
        <result column="example_english" property="example_english"/>
        <result column="example_chinese" property="example_chinese"/>
        <result column="recordpicurl" property="recordpicurl"/>
        <result column="sound_mark" property="soundMark"/>
    </resultMap>
    <select id="showWordSimple" parameterType="map" resultMap="simpleCapacityVoResultMap">
        select
        uv.unit_id as unit_id,
        v.id,
        v.word,
        if (uv.word_chinese is null, v.word_chinese, uv.word_chinese) word_chinese,
        v.example_english,
        v.example_chinese,
        v.recordpicurl,
        v.sound_mark AS soundMark
        from vocabulary v,unit_vocabulary_new uv
        WHERE
        v.id = uv.vocabulary_id
        AND uv.unit_id = #{unitId}
        AND v.delStatus = 1
        AND v.id NOT IN (
        SELECT
        l1.vocabulary_id
        FROM
        learn l1
        WHERE
        l1.student_id = #{studentId}
        AND l1.unit_id = #{unitId}
        AND l1.study_model =
        <include refid="simple_test_type"/>
        and l1.type = 1
        )
        LIMIT 1;
    </select>
    <select id="getTestPaperGenerationAll" parameterType="map" resultType="com.zhidejiaoyu.common.pojo.Vocabulary">
        SELECT
        c.id, c.word, if(locate('&lt;', if(locate('>', c.word_chinese) > 0, replace(c.word_chinese, '>', ')'),
        c.word_chinese)),
        replace(if(locate('>', c.word_chinese) > 0, replace(c.word_chinese, '>', ')'), c.word_chinese), '&lt;', '('),
        c.word_chinese) AS wordChinese
        FROM unit_new a JOIN unit_vocabulary_new b ON a.id = b.unit_id JOIN vocabulary c ON b.vocabulary_id = c.id
        AND a.course_id = #{courseId} AND c.delStatus = 1
        <if test="unitId != null and unitId != ''">
            AND a.id in ( <foreach collection="unitId" item="id" separator=",">#{id}</foreach> )
        </if>
        order by rand() LIMIT ${typeTwo}
    </select>
    <select id="selectByCourseIds" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v, unit_vocabulary_new uv, unit_new u
        WHERE v.delStatus = 1 AND v.id = uv.vocabulary_id AND u.id = uv.unit_id
        <if test="courseIds.size > 0">
            AND u.course_id in (
            <foreach collection="courseIds" separator="," item="id">
                #{id}
            </foreach>
            )
        </if>
    </select>

    <select id="selectBookVoByCourseId" resultType="com.zhidejiaoyu.common.vo.bookVo.BookVo" parameterType="map">
        SELECT distinct v.id,
                        if(uv.word_chinese is null or uv.word_chinese = '', v.word_chinese, uv.word_chinese) chinese,
                        if(v.syllable is null or v.syllable = '', v.word, v.syllable)                        content,
                        v.word                                                                               readUrl,
                        v.sound_mark                                                                         soundMark
        FROM vocabulary v,
             unit_vocabulary_new uv,
             unit_new u
        WHERE v.delStatus = 1
          AND v.id = uv.vocabulary_id
          AND u.id = uv.unit_id
          AND u.course_id = #{courseId}
    </select>

    <select id="selectUnknownWordBookVoByCourseId" resultType="com.zhidejiaoyu.common.vo.bookVo.BookVo"
            parameterType="map">
        SELECT
        distinct v.id,
        v.word_chinese chinese ,
        if(v.syllable is null or v.syllable = '', v.word, v.syllable) content,
        v.word readUrl,
        v.sound_mark soundMark
        FROM vocabulary v,learn l where v.id =
        l.vocabulary_id and
        v.delStatus = 1
        and l.type = 1
        and l.student_id=#{studentId} and
        l.course_id=#{courseId}
        <if test="condition == 2">
            -- 生词
            and l.`status` = 0
        </if>
        <if test="condition == 3">
            -- 熟词
            and l.`status` = 1
        </if>
    </select>
    <select id="selectUnlearnedBookVoByCourseId" resultType="com.zhidejiaoyu.common.vo.bookVo.BookVo"
            parameterType="map">
        SELECT v.id,
               v.word_chinese                                                chinese,
               if(v.syllable is null or v.syllable = '', v.word, v.syllable) content,
               v.word                                                        readUrl,
               v.sound_mark                                                  soundMark
        FROM unit_vocabulary_new uv,
             vocabulary v,
             unit_new u
        WHERE v.id = uv.vocabulary_id
          AND v.delStatus = 1
          AND u.id = uv.unit_id
          AND u.course_id = #{courseId}
          AND uv.vocabulary_id NOT IN (SELECT l.vocabulary_id
                                       FROM learn l
                                       WHERE l.student_id = #{studentId}
                                         and l.type = 1
                                         AND l.vocabulary_id = v.id
                                         AND l.course_id = #{courseId})
    </select>

    <sql id="selectBookVoSql">
        SELECT v.id,
               v.word_chinese                                                chinese,
               if(v.syllable is null or v.syllable = '', v.word, v.syllable) content,
               v.word                                                        readUrl,
               v.sound_mark                                                  soundMark
        FROM vocabulary v,
             unit_vocabulary_new uv,
             unit_new u
        WHERE v.delStatus = 1
          AND v.id = uv.vocabulary_id
          AND u.id = uv.unit_id
    </sql>
    <select id="selectBookVoByCourseIds" resultType="com.zhidejiaoyu.common.vo.bookVo.BookVo" parameterType="map">
        <include refid="selectBookVoSql"/>
        <if test="courseIds.size > 0">
            AND u.course_id in (
            <foreach collection="courseIds" separator="," item="id">
                #{id}
            </foreach>
            )
        </if>
    </select>

    <select id="selectBookVoByUnitId" resultType="com.zhidejiaoyu.common.vo.bookVo.BookVo" parameterType="map">
        SELECT distinct v.id,
                        v.word_chinese chinese,
                        v.word         content,
                        v.word         readUrl,
                        v.sound_mark   soundMark
        FROM vocabulary v,
             unit_vocabulary_new uv,
             unit_new u
        WHERE v.delStatus = 1
          AND v.id = uv.vocabulary_id
          AND u.id = uv.unit_id
          and u.id = #{unitId}
    </select>

    <select id="selectUnknownWordBookVoByCourseIds" resultType="com.zhidejiaoyu.common.vo.bookVo.BookVo"
            parameterType="map">
        SELECT
        v.id,
        v.word_chinese chinese,
        if(v.syllable is null or v.syllable = '', v.word, v.syllable) content,
        v.word readUrl,
        v.sound_mark soundMark
        FROM vocabulary v,learn l where v.id =
        l.vocabulary_id and
        v.delStatus = 1
        and l.student_id=#{studentId}
        <if test="courseIds.size > 0">
            and l.course_id in (
            <foreach collection="courseIds" item="id" separator=",">
                #{id}
            </foreach>
            )
        </if>

        <if test="condition == 2">
            -- 生词
            and l.`status` = 0
        </if>
        <if test="condition == 3">
            -- 熟词
            and l.`status` = 1
        </if>
    </select>
    <select id="selectUnlearnedBookVoByCourseIds" resultType="com.zhidejiaoyu.common.vo.bookVo.BookVo"
            parameterType="map">
        SELECT
        v.id,
        v.word_chinese chinese,
        if(v.syllable is null or v.syllable = '', v.word, v.syllable) content,
        v.word readUrl,
        v.sound_mark soundMark
        FROM
        unit_vocabulary_new uv,
        vocabulary v,
        unit_new u
        WHERE
        v.id = uv.vocabulary_id
        AND v.delStatus = 1
        AND u.id = uv.unit_id
        <if test="courseIds.size > 0">
            AND u.course_id in (
            <foreach collection="courseIds" separator="," item="id">
                #{id}
            </foreach>
            )
        </if>
        AND uv.vocabulary_id NOT IN (
        SELECT
        l.vocabulary_id
        FROM
        learn l
        WHERE
        l.student_id = #{studentId}
        AND l.vocabulary_id = v.id
        <if test="courseIds.size > 0">
            AND l.course_id in (
            <foreach collection="courseIds" separator="," item="id">
                #{id}
            </foreach>
            )
        </if>
        )
    </select>

    <select id="selectByWord" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from vocabulary where binary word = #{text} limit 1
    </select>
    <select id="countWordMapByCourseIds" resultType="java.util.Map" parameterType="map">
        select a.course_id id, count(c.id) count
        FROM unit_new a
        JOIN unit_vocabulary_new b ON a.id = b.unit_id
        JOIN vocabulary c ON b.vocabulary_id = c.id AND c.delStatus = 1 AND a.course_id in (
        <foreach collection="courseIds" item="id" separator=",">
            #{id}
        </foreach>
        )
        group by a.course_id
    </select>
    <select id="getWordByCourseGetNumber" resultMap="BaseResultMap" parameterType="map">
        select v.id, v.word, uv.word_chinese
        from vocabulary v
        <if test="type==1">
            join unit_vocabulary_new uv on v.id = uv.vocabulary_id
            join unit_new unit on unit.id = uv.unit_id
        </if>
        <if test="type==2">
            join unit_vocabulary_new uv on v.id = uv.vocabulary_id
            join unit_new unit on unit.id = uv.unit_id
        </if>
        where unit.course_id = #{courseId}
        order by rand()
        limit #{start},#{row}
    </select>

    <select id="selectByCourseIdWithoutWordIds" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="unite_Column_List"/>
        FROM vocabulary v,
        <if test="type==1">unit_vocabulary_new uv, unit u</if>
        <if test="type==2">unit_vocabulary_new uv, unit_new u</if>
        WHERE v.delStatus = 1 AND v.id = uv.vocabulary_id AND u.id = uv.unit_id AND
        u.course_id = #{courseId}
        <if test="vocabularies.size > 0">
            and v.id not in (
            <foreach collection="vocabularies" item="item" separator=",">
                #{item.id}
            </foreach>
            )
        </if>
        group by v.id
    </select>

    <select id="getWord" parameterType="map" resultMap="BaseResultMap">
        select
        v.id, v.word, uv.word_chinese
        from vocabulary v,
        unit_vocabulary_new uv, unit u
        where v.id = uv.vocabulary_id and v.delStatus = 1
        and uv.unit_id = u.id and u.joint_name like '%单词%'
        and v.id not in (
        <foreach collection="wordIds" item="wordId" separator=",">
            #{wordId}
        </foreach>
        )
        order by rand()
        limit #{start},#{row}
    </select>


</mapper>
