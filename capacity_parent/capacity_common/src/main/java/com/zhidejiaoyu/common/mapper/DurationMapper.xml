<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidejiaoyu.common.mapper.DurationMapper">
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.Duration">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="student_id" property="studentId" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="unit_id" property="unitId" jdbcType="BIGINT"/>
        <result column="valid_time" property="validTime" jdbcType="BIGINT"/>
        <result column="online_time" property="onlineTime" jdbcType="BIGINT"/>
        <result column="login_time" property="loginTime" jdbcType="TIMESTAMP"/>
        <result column="login_out_time" property="loginOutTime" jdbcType="TIMESTAMP"/>
        <result column="study_model" property="studyModel" jdbcType="INTEGER"/>
        <result column="study_count" property="studyCount"/>
        <result column="study_plan_id" property="studyPlanId"/>
        <result column="learning_model" property="learningModel"/>
        <result column="group" property="group"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, student_id, course_id, unit_id, valid_time, online_time, login_time, login_out_time,
        study_model, study_count, study_plan_id, `group`
    </sql>
    <select id="countTotalValidTimeMapByCourseId" resultType="java.util.Map" parameterType="map">
        SELECT
        course_id id,
        sum(valid_time) value
        FROM
        duration
        WHERE
        student_id = #{stuId}
        AND course_id in (
        <foreach collection="courses" item="course" separator=",">
            #{course.id}
        </foreach>
        )
    </select>

    <select id="valid_timeIndex" parameterType="map" resultType="integer">
        select SUM(valid_time) from duration where unit_id = #{unit_id} and student_id =#{student_id}
        <if test="model == 0">
            and study_model = 0
        </if>
        <if test="model == 1">
            and study_model = 1
        </if>
        <if test="model == 2">
            and study_model = 2
        </if>
        <if test="model == 3">
            and study_model = 3
        </if>
        <if test="model == 4">
            and study_model = 4
        </if>
        <if test="model == 5">
            and study_model = 5
        </if>
        <if test="model == 6">
            and study_model = 6
        </if>
        <!-- and study_model = '慧记忆' -->
    </select>
    <select id="selectValidTimeAndOnlineTime" resultType="java.util.Map" parameterType="map">
        SELECT valid_time validTime,
               (
                   TO_SECONDS(login_out_time) - TO_SECONDS(login_time)
                   )      onlineTime
        FROM duration
        WHERE student_id = #{student.id}
        GROUP BY login_time;

    </select>
    <select id="planSeniority" resultType="com.zhidejiaoyu.common.vo.SeniorityVo">
        <!--
        select a.student_id, SUM(a.valid_time) AS learnDate from (select student_id, course_id, SUM(valid_time) AS valid_time FROM duration GROUP BY student_id, course_id) a JOIN student b ON a.student_id = b.id JOIN course c ON a.course_id = c.id
        AND b.area = #{area} AND b.school_name = #{school_name} AND b.grade = #{grade} AND b.squad = #{squad}  &#45;&#45; AND b.id = 3169
        AND c.study_paragraph = #{study_paragraph} AND c.version = #{version} GROUP BY a.student_id ORDER BY learnDate <if test="haveTime == 1">ASC</if> <if test="haveTime == 2">DESC</if>
        -->

        SELECT
        a.student_id,
        SUM(a.valid_time) AS learnDate,
        a.student_name,
        a.squad,
        a.school_name
        FROM
        (
        SELECT
        u.student_id,
        u.course_id,
        SUM(u.valid_time) AS valid_time,
        s.student_name,
        s.squad,
        s.school_name
        FROM
        duration u, student s WHERE u.student_id = s.id
        GROUP BY
        u.student_id,
        u.course_id
        ) a
        JOIN student b ON a.student_id = b.id
        JOIN course c ON a.course_id = c.id
        AND c.study_paragraph = #{study_paragraph} AND c.version = #{version}
        AND b.grade = #{grade} AND b.class_id = #{classId}
        GROUP BY
        a.student_id
        ORDER BY
        learnDate DESC
    </select>
    <select id="planSenioritySchool" resultType="com.zhidejiaoyu.common.vo.SeniorityVo">
        <!--
        select a.student_id, SUM(a.valid_time) AS learnDate from (select student_id, course_id, SUM(valid_time) AS valid_time FROM duration GROUP BY student_id, course_id) a JOIN student b ON a.student_id = b.id JOIN course c ON a.course_id = c.id
        AND b.area = #{area} AND b.school_name = #{school_name}  &#45;&#45; AND b.id = 3169
        AND c.study_paragraph = #{study_paragraph} AND c.version = #{version} GROUP BY a.student_id ORDER BY learnDate <if test="haveTime == 1">ASC</if> <if test="haveTime == 2">DESC</if> LIMIT 50;
        -->

        SELECT
        a.student_id,
        SUM(a.valid_time) AS learnDate,
        a.student_name,
        a.squad,
        a.school_name
        FROM
        (
        SELECT
        u.student_id,
        u.course_id,
        SUM(u.valid_time) AS valid_time,
        s.student_name,
        s.squad,
        s.school_name
        FROM
        duration u, student s WHERE u.student_id = s.id
        GROUP BY
        u.student_id,
        u.course_id
        ) a
        JOIN student b ON a.student_id = b.id
        JOIN course c ON a.course_id = c.id
        AND c.study_paragraph = #{study_paragraph} AND c.version = #{version}
        AND b.teacher_id = #{teacherId}
        GROUP BY
        a.student_id
        ORDER BY
        learnDate DESC
        LIMIT 50;
    </select>
    <select id="planSeniorityNationwide" resultType="com.zhidejiaoyu.common.vo.SeniorityVo">
        <!--
        select a.student_id, SUM(a.valid_time) AS learnDate from (select student_id, course_id, SUM(valid_time) AS valid_time FROM duration GROUP BY student_id, course_id) a JOIN student b ON a.student_id = b.id JOIN course c ON a.course_id = c.id
        AND c.study_paragraph = #{study_paragraph} AND c.version = #{version} GROUP BY a.student_id ORDER BY learnDate <if test="haveTime == 1">ASC</if> <if test="haveTime == 2">DESC</if> LIMIT 50;
        -->

        SELECT
        a.student_id,
        SUM(a.valid_time) AS learnDate,
        a.student_name,
        a.squad,
        a.school_name
        FROM
        (
        SELECT
        u.student_id,
        u.course_id,
        SUM(u.valid_time) AS valid_time,
        s.student_name,
        s.squad,
        s.school_name
        FROM
        duration u, student s WHERE u.student_id = s.id
        GROUP BY
        u.student_id,
        u.course_id
        ) a
        JOIN student b ON a.student_id = b.id
        JOIN course c ON a.course_id = c.id
        AND c.study_paragraph = #{study_paragraph}
        AND c.version = #{version}
        GROUP BY
        a.student_id
        ORDER BY
        learnDate DESC
        LIMIT 50;
    </select>
    <select id="selectStudyEfficiency" resultType="java.lang.Double" parameterType="map">
        SELECT SUM(valid_time) / SUM(online_time)
        FROM duration
        WHERE login_time &gt;= #{studentWorkDay.workDayBegin}
          AND login_time &lt;= #{studentWorkDay.workDayEnd}
          AND student_id = #{studentWorkDay.studentId}
    </select>
    <select id="selectValidTime" resultType="java.lang.Integer" parameterType="map">
        select SUM(valid_time) from duration
        <where>
            <if test="beginTime != null and beginTime != ''">
                and login_time &gt; #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and login_time &lt; #{endTime}
            </if>
            and student_id = #{studentId}
        </where>


    </select>
    <select id="selectOnlineTime" resultType="java.lang.Integer" parameterType="map">
        select SUM(online_time) from duration
        <where>
            <if test="beginTime != null and beginTime != ''">
                and login_time &gt; #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and login_time &lt; #{endTime}
            </if>
            and student_id = #{studentId}
        </where>
    </select>
    <select id="selectLastLoginDuration" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from duration where student_id = #{studentId} and valid_time = 0 order by id
        desc limit 1
    </select>

    <select id="countOnlineTimeWithLoginTime" resultType="java.lang.Integer" parameterType="map">
        select count(id)
        from duration
        where student_id = #{student.id}
          and login_time = #{loginTime}
          and valid_time = 0
    </select>
    <select id="selectByStudentIdAndCourseId" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from duration where student_id = #{studentId} and course_id = #{courseId}
        <if test="unitId != null">
            and unit_id = #{unitId}
        </if>
        and login_time = #{loginTime} and study_model = #{key}
    </select>
    <select id="countByLoginOutTime" resultType="java.lang.Integer" parameterType="map">
        select count(id)
        from duration
        where student_id = #{studentId}
          and login_out_time like concat(#{loginOutTime}, '%')
    </select>
    <select id="selectLastDuration" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from duration where student_id = #{studentId} and to_days(login_time) = to_days(now()) and online_time = 0
        order by id desc limit 1
    </select>
    <select id="countOnlineTimeWithLoginOutTine" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from duration
        where student_id = #{studentId}
        and online_time &lt;> 0
        order by id desc
        limit 1
    </select>

    <select id="selectExportStudentOnlineTimeWithSchoolDetail"
            resultType="com.zhidejiaoyu.common.vo.student.studentinfowithschool.StudentInfoSchoolDetail"
            parameterType="map">
        select t.school                                                schoolName,
               s.account,
               s.student_name                                          studentName,
               s.register_date                                         createTime,
               (select sum(online_time)
                from duration
                where student_id = s.id
                  and TO_DAYS(login_out_time) = TO_DAYS(#{date})
                GROUP BY student_id)                                   onlineTime,
               date_format(rl.create_time, '%Y-%m-%d')                 time,
               (select count(id) from pay_log where student_id = s.id) paid
        from run_log rl,
             student s,
             teacher t
        where s.id = rl.operate_user_id
          and (s.teacher_id = t.teacher_id or s.teacher_id = t.school_admin_id)
          and rl.type = 1
          and to_days(rl.create_time) = to_days(#{date})
        group by rl.operate_user_id
    </select>

    <select id="selectLoginTimeByDate" parameterType="map" resultType="date">
        select max(login_time)
        from duration
        where student_id = #{studentId}
          and date(login_time) &lt;= date(#{date})
    </select>
    <select id="selectLearnDateAndOnlineTime" resultType="com.zhidejiaoyu.common.vo.smallapp.studyinfo.DurationInfoVO"
            parameterType="map">
        select sum(d.online_time)                  onlineTime,
               date_format(login_time, '%Y-%m-%d') learnDate
        from duration d
        where d.student_id = #{studentId}
          and d.valid_time &lt;> 0
        group by TO_DAYS(d.login_time)
        order by d.login_time desc
    </select>

    <select id="selectDailyStateVOLearnDateAndOnlineTime"
            resultType="com.zhidejiaoyu.common.vo.smallapp.studyinfo.DailyStateVO">
        select
        s.student_name studentName,
        d.student_id studentId,
        s.account,
        sum(d.online_time) onlineTime,
        date_format(d.login_time, '%Y-%m-%d') learnDate
        from duration d,
        student s
        where d.student_id = s.id
        and s.account in (
        <foreach collection="account" separator="," item="c">
            #{c}
        </foreach>
        )
        and d.valid_time &lt;> 0
        and to_days(d.login_time) = to_days(now())
        group by d.student_id
        order by d.login_time desc
    </select>

    <select id="selectDurationInfos" resultType="com.zhidejiaoyu.common.vo.smallapp.studyinfo.DurationInfoVO"
            parameterType="map">
        select online_time onlineTime,
        date_format(login_time, '%Y-%m-%d') learnDate, study_model studyModel from duration
        where student_id = #{studentId}
        and valid_time &lt;> 0
        and (
        <foreach collection="learnDateList" separator="or" item="date">
            login_time like concat(#{date}, '%')
        </foreach>
        )
        order by login_time desc
    </select>

    <select id="selectTodayDurationInfos"
            resultType="com.zhidejiaoyu.common.vo.smallapp.studyinfo.DailyStateVO">
        select online_time                         onlineTime,
               date_format(login_time, '%Y-%m-%d') learnDate,
               study_model                         studyModel
        from duration
        where student_id = #{studentId}
          and valid_time &lt;> 0
          and to_days(login_time) = to_days(now())
        order by login_time desc
    </select>

    <select id="selectLastStudyEfficiency" resultType="java.lang.Double" parameterType="map">
        select sum(d.valid_time) / sum(d.online_time)
        from duration d,
             (select max(d2.login_time) loginTime, d2.student_id studentId
              from duration d2
              where student_id = #{studentId}
              limit 1) t
        where d.student_id = t.studentId
          and TO_DAYS(d.login_time) = TO_DAYS(t.loginTime)
    </select>

    <delete id="deleteByStudentIds" parameterType="map">
        delete from duration
        where student_id in (
        <foreach collection="studentIds" separator="," item="studentId">
            #{studentId}
        </foreach>
        )
    </delete>
    <select id="selectDayTimeByStudentId" parameterType="map" resultType="integer">
        select sum(online_time)
        from duration
        where student_id = #{studentId}
        group by TO_DAYS(login_time)
    </select>

    <select id="selectValidTimeByStudentIds" resultType="map" parameterType="map">
        SELECT valid_time validTime,student_id studentId
        FROM duration
        WHERE
        student_id in (
        <foreach collection="studentIds" separator="," item="studentId">
            #{studentId}
        </foreach>
        )
        and to_days(login_time)=to_days(#{date})
        GROUP BY student_id;
    </select>

    <select id="selectLoginTimeByStudentIdAndDate" resultType="date" parameterType="map">
        select login_time
        from duration
        where student_id = #{studentId}
          and to_days(login_time) = to_days(#{date})
        order by login_time
        limit 1
    </select>
    <select id="selectByLearningDetails" resultType="java.util.Map" parameterType="map">
        select
        sum(valid_time) validTime,
        sum(online_time) onlineTime,
        learning_model learningModel
        from duration
        where student_id = #{learningDetails.studentId}
        and to_days(login_time) = to_days(#{date})
        and course_id = #{learningDetails.courseId}
        and unit_id = #{learningDetails.unitId}
        and `group` = #{learningDetails.group}
        and study_model in (
        <if test="learningDetails.type == 1">
            /*单词模块*/
            0,1,2,3,4,10,11,12,13,27,35,36
        </if>
        <if test="learningDetails.type == 2">
            /*句型模块*/
            5,6,7
        </if>
        <if test="learningDetails.type == 3">
            /*课文模块*/
            28,29
        </if>
        <if test="learningDetails.type == 4">
            /*字母、音标模块*/
            30,31,32,33
        </if>
        <if test="learningDetails.type == 5">
            /*语法模块*/
        </if>
        )
        and learning_model is not null
        and `group` is not null
        group by learning_model
    </select>
    <select id="selectAvgOnlineTime" resultType="java.lang.Double">
        select sum(online_time) / count(DISTINCT student_id)
        from duration
        where TO_DAYS(login_time) = TO_DAYS(now())
    </select>

</mapper>
