<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidejiaoyu.common.mapper.GameScoreMapper">
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.GameScore">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="student_id" property="studentId" jdbcType="BIGINT"/>
        <result column="game_id" property="gameId" jdbcType="BIGINT"/>
        <result column="game_name" property="gameName" jdbcType="VARCHAR"/>
        <result column="game_start_time" property="gameStartTime" jdbcType="TIMESTAMP"/>
        <result column="game_end_time" property="gameEndTime" jdbcType="TIMESTAMP"/>
        <result column="score" property="score" jdbcType="INTEGER"/>
        <result column="award_gold" property="awardGold" jdbcType="INTEGER"/>
        <result column="pass_flag" property="passFlag" jdbcType="INTEGER"/>
        <result column="explain" property="explain" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, student_id, game_id, game_name, game_start_time, game_end_time, score, award_gold, 
    pass_flag, `explain`
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhidejiaoyu.common.pojo.GameScoreExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from game_score
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from game_score
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from game_score
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.zhidejiaoyu.common.pojo.GameScoreExample">
        delete from game_score
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zhidejiaoyu.common.pojo.GameScore">
    insert into game_score (id, student_id, game_id, 
      game_name, game_start_time, game_end_time, 
      score, award_gold, pass_flag, 
      `explain`)
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{gameId,jdbcType=BIGINT}, 
      #{gameName,jdbcType=VARCHAR}, #{gameStartTime,jdbcType=TIMESTAMP}, #{gameEndTime,jdbcType=TIMESTAMP}, 
      #{score,jdbcType=INTEGER}, #{awardGold,jdbcType=INTEGER}, #{passFlag,jdbcType=INTEGER}, 
      #{explain,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.zhidejiaoyu.common.pojo.GameScore">
        insert into game_score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="gameId != null">
                game_id,
            </if>
            <if test="gameName != null">
                game_name,
            </if>
            <if test="gameStartTime != null">
                game_start_time,
            </if>
            <if test="gameEndTime != null">
                game_end_time,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="awardGold != null">
                award_gold,
            </if>
            <if test="passFlag != null">
                pass_flag,
            </if>
            <if test="explain != null">
                `explain`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="gameId != null">
                #{gameId,jdbcType=BIGINT},
            </if>
            <if test="gameName != null">
                #{gameName,jdbcType=VARCHAR},
            </if>
            <if test="gameStartTime != null">
                #{gameStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="gameEndTime != null">
                #{gameEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
            <if test="awardGold != null">
                #{awardGold,jdbcType=INTEGER},
            </if>
            <if test="passFlag != null">
                #{passFlag,jdbcType=INTEGER},
            </if>
            <if test="explain != null">
                #{explain,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zhidejiaoyu.common.pojo.GameScoreExample"
            resultType="java.lang.Integer">
        select count(*) from game_score
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update game_score
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.studentId != null">
                student_id = #{record.studentId,jdbcType=BIGINT},
            </if>
            <if test="record.gameId != null">
                game_id = #{record.gameId,jdbcType=BIGINT},
            </if>
            <if test="record.gameName != null">
                game_name = #{record.gameName,jdbcType=VARCHAR},
            </if>
            <if test="record.gameStartTime != null">
                game_start_time = #{record.gameStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gameEndTime != null">
                game_end_time = #{record.gameEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.score != null">
                score = #{record.score,jdbcType=INTEGER},
            </if>
            <if test="record.awardGold != null">
                award_gold = #{record.awardGold,jdbcType=INTEGER},
            </if>
            <if test="record.passFlag != null">
                pass_flag = #{record.passFlag,jdbcType=INTEGER},
            </if>
            <if test="record.explain != null">
                explain = #{record.explain,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update game_score
        set id = #{record.id,jdbcType=BIGINT},
        student_id = #{record.studentId,jdbcType=BIGINT},
        game_id = #{record.gameId,jdbcType=BIGINT},
        game_name = #{record.gameName,jdbcType=VARCHAR},
        game_start_time = #{record.gameStartTime,jdbcType=TIMESTAMP},
        game_end_time = #{record.gameEndTime,jdbcType=TIMESTAMP},
        score = #{record.score,jdbcType=INTEGER},
        award_gold = #{record.awardGold,jdbcType=INTEGER},
        pass_flag = #{record.passFlag,jdbcType=INTEGER},
        `explain` = #{record.explain,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zhidejiaoyu.common.pojo.GameScore">
        update game_score
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="gameId != null">
                game_id = #{gameId,jdbcType=BIGINT},
            </if>
            <if test="gameName != null">
                game_name = #{gameName,jdbcType=VARCHAR},
            </if>
            <if test="gameStartTime != null">
                game_start_time = #{gameStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="gameEndTime != null">
                game_end_time = #{gameEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=INTEGER},
            </if>
            <if test="awardGold != null">
                award_gold = #{awardGold,jdbcType=INTEGER},
            </if>
            <if test="passFlag != null">
                pass_flag = #{passFlag,jdbcType=INTEGER},
            </if>
            <if test="explain != null">
                `explain` = #{explain,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zhidejiaoyu.common.pojo.GameScore">
            update game_score
            set student_id = #{studentId,jdbcType=BIGINT},
              game_id = #{gameId,jdbcType=BIGINT},
              game_name = #{gameName,jdbcType=VARCHAR},
              game_start_time = #{gameStartTime,jdbcType=TIMESTAMP},
              game_end_time = #{gameEndTime,jdbcType=TIMESTAMP},
              score = #{score,jdbcType=INTEGER},
              award_gold = #{awardGold,jdbcType=INTEGER},
              pass_flag = #{passFlag,jdbcType=INTEGER},
              `explain` = #{explain,jdbcType=VARCHAR}
            where id = #{id,jdbcType=BIGINT}
    </update>
    <delete id="deleteByStudentIds" parameterType="map">
        delete from game_score
        where student_id in (
        <foreach collection="studentIds" separator="," item="studentId">
            #{studentId}
        </foreach>
        )
    </delete>
</mapper>