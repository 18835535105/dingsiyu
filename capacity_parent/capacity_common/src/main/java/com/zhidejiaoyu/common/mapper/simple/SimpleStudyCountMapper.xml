<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidejiaoyu.common.mapper.simple.SimpleStudyCountMapper">
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.StudyCount">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="student_id" property="studentId" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
        <result column="study_count" property="studyCount" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, student_id, course_id, count, study_count
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.zhidejiaoyu.common.pojo.StudyCountExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from study_count
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from study_count
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from study_count
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.zhidejiaoyu.common.pojo.StudyCountExample">
        delete from study_count
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zhidejiaoyu.common.pojo.StudyCount">
        insert into study_count (id, student_id, course_id,
                                 count, study_count)
        values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT},
                #{count,jdbcType=INTEGER}, #{studyCount,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.zhidejiaoyu.common.pojo.StudyCount">
        insert into study_count
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="studyCount != null">
                study_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="studyCount != null">
                #{studyCount,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zhidejiaoyu.common.pojo.StudyCountExample"
            resultType="java.lang.Integer">
        select count(*) from study_count
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByCourseId" resultType="com.zhidejiaoyu.common.pojo.StudyCount" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from study_count where student_id = #{studentId} and course_id = #{courseId}
    </select>
    <select id="selectMaxCountByCourseId" resultType="java.lang.Integer" parameterType="map">
        select max(count)
        from study_count
        where student_id = #{studentId} and course_id = #{courseId}
    </select>
    <select id="selectByCourseIdAndCount" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from study_count where student_id = #{studentId} and course_id = #{courseId} and count = #{maxCount}
    </select>
    <select id="selectMaxStudyCountByCourseId" resultType="java.util.Map" parameterType="java.util.List">
        select course_id id, max(study_count) value
        from study_count
        where student_id = #{stuId} and course_id in (
        <foreach collection="courses" item="course" separator=",">
            #{course.id}
        </foreach>
        )
        GROUP BY course_id
    </select>
    <select id="selectMaxCountMapByCourseId" resultType="java.util.Map" parameterType="map">
        SELECT
        course_id id,
        MAX(count) value
        FROM
        study_count
        WHERE
        student_id = #{stuId}
        AND course_id IN (
        <foreach collection="courses" separator="," item="course">
            #{course.id}
        </foreach>
        )
        GROUP BY
        course_id
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update study_count
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.studentId != null">
                student_id = #{record.studentId,jdbcType=BIGINT},
            </if>
            <if test="record.courseId != null">
                course_id = #{record.courseId,jdbcType=BIGINT},
            </if>
            <if test="record.count != null">
                count = #{record.count,jdbcType=INTEGER},
            </if>
            <if test="record.studyCount != null">
                study_count = #{record.studyCount,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update study_count
        set id = #{record.id,jdbcType=BIGINT},
        student_id = #{record.studentId,jdbcType=BIGINT},
        course_id = #{record.courseId,jdbcType=BIGINT},
        count = #{record.count,jdbcType=INTEGER},
        study_count = #{record.studyCount,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zhidejiaoyu.common.pojo.StudyCount">
        update study_count
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=BIGINT},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="studyCount != null">
                study_count = #{studyCount,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zhidejiaoyu.common.pojo.StudyCount">
        update study_count
        set student_id  = #{studentId,jdbcType=BIGINT},
            course_id   = #{courseId,jdbcType=BIGINT},
            count       = #{count,jdbcType=INTEGER},
            study_count = #{studyCount,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByCourseId" parameterType="map">
        update study_count
        set count = count + 1
        where student_id = #{studentId} and course_id = #{courseId}
    </update>
</mapper>
