<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidejiaoyu.common.mapper.LearnNewMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.LearnNew">
        <id column="id" property="id"/>
        <result column="student_id" property="studentId"/>
        <result column="course_id" property="courseId"/>
        <result column="unit_id" property="unitId"/>
        <result column="group" property="group"/>
        <result column="easy_or_hard" property="easyOrHard"/>
        <result column="model_type" property="modelType"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="base_sql">
        id, student_id, course_id, unit_id, `group`, easy_or_hard, model_type, update_time
    </sql>
    <sql id="more_table_sql">
        ln.id, ln.student_id, ln.course_id, ln.unit_id, ln.`group`, ln.easy_or_hard, ln.model_type, ln.update_time
    </sql>
    <sql id="getByType">
        <if test="type==1">
            v.id,
            v.word,
            uv.word_chinese,
            v.recordpicurl,
            v.small_picture_url smallPictureUrl,
            v.middle_picture_url middlePictureUrl,
            v.high_picture_url highPictureUrl,
            v.sound_mark
        </if>
    </sql>

    <select id="selectByStudentStudyPlanNew" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="base_sql"/>
        from learn_new
        where student_id = #{studentStudyPlanNew.studentId}
        and unit_id = #{studentStudyPlanNew.unitId}
        and easy_or_hard = #{studentStudyPlanNew.easyOrHard}
        limit 1
    </select>
    <select id="selectByStudentIdAndUnitIdAndEasyOrHard" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="base_sql"/>
        from learn_new
        where student_id = #{studentId}
        and unit_id = #{unitId}
        and easy_or_hard=#{easyOrHard}
        limit 1
    </select>

    <select id="selectByStudentIdAndUnitIdAndEasyOrHardAndModelType" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="base_sql"/>
        from learn_new
        where student_id = #{studentId}
        and unit_id = #{unitId}
        and easy_or_hard = #{easyOrHard}
        and model_type = #{modelType}
        limit 1
    </select>

    <select id="selectIdByStudentIdAndUnitIdAndEasyOrHard" resultType="long" parameterType="map">
        select id
        from learn_new
        where student_id = #{studentId}
          and unit_id = #{unitId}
          and easy_or_hard = #{easyOrHard}
          and model_type = #{modelType}
        limit 1;
    </select>
    <select id="selectStudyMap" parameterType="map" resultType="map">
        <if test="model==1">
            SELECT
            <include refid="getByType"/>
            FROM vocabulary v
            join unit_vocabulary_new uv
            on v.id = uv.vocabulary_id
            WHERE uv.unit_id = #{unitId}
            and uv.group=#{group}
            <if test="type==1">
                AND v.recordpicurl is not NULL
            </if>
            AND v.delStatus = 1
            <if test="wordIds.size>0">
                and v.id not in (
                <foreach collection="wordIds" item="wordId" separator=",">
                    #{wordId}
                </foreach>
                )
            </if>
            order by v.id
            LIMIT 1
        </if>
        <if test="model==2">

        </if>
        <if test="model==3">

        </if>
    </select>

    <select id="selectDelLearnIdByStudentIdAndNumber" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="base_sql"/>
        from learn_new where student_id =#{studentId} order by update_time limit #{number}
    </select>
    <select id="countLearnedWordCount" resultType="java.lang.Integer" parameterType="map">
        select count(DISTINCT t.wordId)
        from (
                 select DISTINCT le.word_id wordId
                 from learn_new ln2,
                      learn_extend le
                 where ln2.student_id = #{studentId}
                   and ln2.model_type = 1
                   and le.learn_id = ln2.id
                 union all
                 select DISTINCT uvn.vocabulary_id wordId
                 from unit_vocabulary_new uvn,
                      learn_history lh
                 where lh.student_id = #{studentId}
                   and lh.`type` = 1
                   and lh.unit_id = uvn.unit_id
                 union all
                 select DISTINCT vocabulary_id wordId
                 from learn l
                 where l.student_id = #{studentId}
                   and vocabulary_id is not null) t
    </select>
    <select id="countLearnedWordCountByStartDateAndEndDate" resultType="java.lang.Integer" parameterType="map">
        select count(DISTINCT t.wordId)
        from (
                 select DISTINCT le.word_id wordId
                 from learn_new ln2,
                      learn_extend le
                 where ln2.student_id = #{studentId}
                   and ln2.model_type = 1
                   and le.learn_id = ln2.id
                   and le.update_time >= #{beginDate}
                   and le.update_time &lt;= #{endDate}
                 union all
                 select DISTINCT uvn.vocabulary_id wordId
                 from unit_vocabulary_new uvn,
                      learn_history lh
                 where lh.student_id = #{studentId}
                   and lh.`type` = 1
                   and lh.unit_id = uvn.unit_id
                   and lh.update_time >= #{beginDate}
                   and lh.update_time &lt;= #{endDate}
                 union all
                 select DISTINCT vocabulary_id wordId
                 from learn l
                 where l.student_id = #{studentId}
                   and vocabulary_id is not null
                   and l.update_time >= #{beginDate}
                   and l.update_time &lt;= #{endDate}) t

    </select>

    <select id="getUnitIdByStudentIdAndType" parameterType="map" resultType="long">
        select unit_id
        from learn_new
        where student_id = #{studentId}
          and `model_type` = #{type}
    </select>
    <select id="selectByUpdateTime" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="more_table_sql"/>
        FROM
        learn_new ln,
        learn_extend le
        WHERE
        ln.id = le.learn_id
        AND TO_DAYS(le.update_time) = TO_DAYS(#{date})
    </select>

</mapper>
