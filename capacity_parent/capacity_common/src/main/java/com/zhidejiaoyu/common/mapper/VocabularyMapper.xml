<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
        namespace="com.zhidejiaoyu.common.mapper.VocabularyMapper">
    <resultMap id="BaseResultMap"
               type="com.zhidejiaoyu.common.pojo.Vocabulary">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="word" property="word" jdbcType="VARCHAR"/>
        <result column="word_chinese" property="wordChinese"
                jdbcType="VARCHAR"/>
        <result column="example_english" property="exampleEnglish"
                jdbcType="VARCHAR"/>
        <result column="example_chinese" property="exampleChinese"
                jdbcType="VARCHAR"/>
        <result column="explain_" property="explain_"
                jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime"
                jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime"
                jdbcType="TIMESTAMP"/>
        <result column="course_unit" property="courseUnit"
                jdbcType="VARCHAR"/>
        <result column="syllable" property="syllable"
                jdbcType="VARCHAR"/>
        <result column="delStatus" property="delStatus"
                jdbcType="VARCHAR"/>
        <result column="sound_mark" property="soundMark"/>
        <result column="read_url" property="readUrl"/>
        <result column="small_picture_url" property="smallPictureUrl"/>
        <result column="middle_picture_url" property="middlePictureUrl"/>
        <result column="high_picture_url" property="highPictureUrl"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, word, word_chinese, example_english, example_chinese,
        explain_,
        create_time,
        update_time,
        course_unit,
        syllable,
        delStatus,
        sound_mark,
        read_url,
        small_picture_url,
        middle_picture_url,
        high_picture_url
    </sql>

    <!-- 多表查询返回结果 -->
    <sql id="unite_Column_List">
        v.id, v.word, v.word_chinese, v.example_english,
        v.example_chinese,
        v.explain_,
        v.create_time,
        v.update_time,
        v.course_unit,
        v.syllable,
        v.delStatus,
        v.recordpicurl,
        v.read_url,
        v.sound_mark,
        v.small_picture_url,
        v.middle_picture_url,
        v.high_picture_url
    </sql>

    <!-- 根据学生id查询当前单元下指定模块的未学习的所有单词 -->
    <select id="selectUnlearnedByUnitId" resultMap="BaseResultMap"
            parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM
        unit_vocabulary_new uv,
        vocabulary v
        WHERE v.id = uv.vocabulary_id
        AND v.delStatus = 1
        AND uv.unit_id = #{unitId}
        <if test="studyModel == '单词图鉴'">
            AND v.recordpicurl IS NOT NULL
        </if>
        AND uv.vocabulary_id NOT IN (
        SELECT
        l.vocabulary_id
        FROM
        learn l
        WHERE
        l.student_id = #{studentId}
        AND l.vocabulary_id = v.id
        AND unit_id = #{unitId}
        AND study_model = #{studyModel}
        and l.type = 1
        )
    </select>

    <!-- 根据学生id查询当前单元下指定模块的所有生词/熟词 -->
    <select id="selectUnknownWordByUnitId" resultMap="BaseResultMap"
            parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v,learn l
        where v.id = l.vocabulary_id
        and v.delStatus = 1
        and l.study_model = #{studyModel}
        and l.student_id=#{studentId}
        and l.unit_id=#{unitId}
        and l.type = 1
        <if test="studyModel == '单词图鉴'">
            and v.recordpicurl is not null
        </if>
        <if test="condition == 2">
            -- 生词
            and l.`status` = 0
        </if>
        <if test="condition == 3">
            -- 熟词
            and l.`status` = 1
        </if>
    </select>

    <!-- 获取当前单元下的所有单词信息(不含删除的单词) -->
    <select id="selectByUnitId" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary
        v, unit_vocabulary_new uv
        where uv.unit_id = #{unitId}

        AND v.id = uv.vocabulary_id AND v.delStatus = 1
    </select>
    <select id="selectByUnitIdAndGroup" resultMap="BaseResultMap"
            parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v join unit_vocabulary_new uv on v.id=uv.vocabulary_id
        where
        uv.unit_id = #{unitId}
        AND v.delStatus = 1
        and uv.group=#{group}
    </select>

    <select id="selectByWordIds" parameterType="java.util.List"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vocabulary
        where id in
        <foreach collection="ids" open="(" close=")" separator=","
                 item="item">
            #{item}
        </foreach>
        and delStatus = 1
        order by id desc
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from vocabulary
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="showWord" parameterType="map" resultMap="BaseResultMap">
        SELECT v.id,
               v.word,
               uv.word_chinese,
               v.example_english,
               v.example_chinese,
               v.explain_,
               v.course_unit,
               v.syllable,
               v.delStatus,
               v.recordpicurl,
               v.read_url,
               v.sound_mark,
               v.small_picture_url,
               v.middle_picture_url,
               v.high_picture_url
        FROM vocabulary v,
             unit_vocabulary_new uv
        WHERE v.id = uv.vocabulary_id
          AND uv.unit_id = #{unit_id}
          AND v.delStatus = 1
          AND v.id NOT IN (
            SELECT l1.vocabulary_id
            FROM learn l1
            WHERE l1.student_id = #{id}
              and l1.type = 1
              AND l1.unit_id = #{unit_id}
              AND l1.study_model = '慧听写')
        LIMIT 0, 1
    </select>
    <select id="countByCourseId" resultType="java.lang.Integer" parameterType="map">
        select count(uv.vocabulary_id)
        from vocabulary v, unit_vocabulary_new uv, unit_new u
        where v.id = uv.vocabulary_id and v.delStatus = 1
        and uv.unit_id = u.id and u.course_id = #{courseId}
        <if test="flag == 1">
            and v.recordpicurl is not null
        </if>
    </select>

    <select id="selectByStudentPhase" resultMap="BaseResultMap" parameterType="map">
        SELECT
        DISTINCT
        <include refid="unite_Column_List"/>
        FROM
        vocabulary v,
        unit_vocabulary_new uv,
        course_new c,
        unit_new u
        WHERE
        v.id = uv.vocabulary_id
        AND uv.unit_id = u.id
        AND u.course_id = c.id
        AND v.delStatus = 1
        AND c.delStatus = 1
        AND u.delStatus = 1
        AND c.version = #{student.version}
        <if test="flag == 1">
            AND c.grade = '七年级'
        </if>
        <if test="flag == 2">
            AND c.grade = '高一'
        </if>
        <if test="flag == 3">
            AND c.grade = '高中'
            AND c.label = '必修1'
        </if>
    </select>
    <!--类型区分-->
    <sql id="study_model_sql">
        <if test="model == 0">
            and study_model = '单词图鉴'
        </if>
        <if test="model == 1">
            and study_model = '慧记忆'
        </if>
        <if test="model == 2">
            and study_model = '慧听写'
        </if>
        <if test="model == 3">
            and study_model = '慧默写'
        </if>
        <if test="model == 4">
            and study_model = '例句听力'
        </if>
        <if test="model == 5">
            and study_model = '例句翻译'
        </if>
        <if test="model == 6">
            and study_model = '例句默写'
        </if>
    </sql>
    <sql id="countCourseStudyModel_sql">
        <if test="model == 0 or model == 1 or model == 2 or model == 3">
            example_id IS NULL
        </if>
        <if test="model == 4 or model == 5 or model == 6">
            vocabulary_id IS NULL
        </if>
    </sql>
    <select id="selectSyllableByWordId" resultType="java.util.Map" parameterType="map">
        SELECT
        v.id id,
        v.syllable syllable
        FROM
        vocabulary v
        WHERE
        v.id IN (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
    </select>
    <select id="selectOneWordNotInIds" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="unite_Column_List"/>
        FROM
        vocabulary v,
        unit_vocabulary_new uv
        WHERE
        v.delStatus = 1
        AND uv.vocabulary_id = v.id
        AND uv.unit_id = #{unitId}
        <if test="wordIds.size > 0">
            AND v.id NOT IN (
            <foreach collection="wordIds" item="id" separator=",">
                #{id}
            </foreach>
            )
        </if>
        ORDER BY
        v.id
        LIMIT 1
    </select>
    <select id="selectOneWordNotInIdsNew" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="unite_Column_List"/>
        FROM
        vocabulary v,
        unit_vocabulary_new uv
        WHERE
        v.delStatus = 1
        AND uv.vocabulary_id = v.id
        AND uv.unit_id = #{unitId}
        and uv.group=#{group}
        <if test="wordIds.size > 0">
            AND v.id NOT IN (
            <foreach collection="wordIds" item="id" separator=",">
                #{id}
            </foreach>
            )
        </if>
        ORDER BY
        v.id
        LIMIT 1
    </select>

    <select id="selectIdsByWord" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from vocabulary where word = #{word}
    </select>
    <select id="selectByCourseId" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v, unit_vocabulary_new uv, unit_new u
        WHERE v.delStatus = 1 AND v.id = uv.vocabulary_id AND u.id = uv.unit_id AND
        u.course_id = #{courseId}
    </select>
    <select id="selectUnknownWordByCourseId" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v,learn l where v.id =
        l.vocabulary_id and
        v.delStatus =
        1 and l.study_model = #{studyModel}
        and l.student_id=#{studentId} and
        l.course_id=#{courseId}
        <if test="studyModel == '单词图鉴'">
            and v.recordpicurl is not null
        </if>
        <if test="condition == 2">
            -- 生词
            and l.`status` = 0
        </if>
        <if test="condition == 3">
            -- 熟词
            and l.`status` = 1
        </if>
    </select>
    <select id="selectUnlearnedByCourseId" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM
        unit_vocabulary_new uv,
        vocabulary v,
        unit_new u
        WHERE
        v.id = uv.vocabulary_id
        AND v.delStatus = 1
        AND u.id = uv.unit_id
        AND u.course_id = #{courseId}
        <if test="studyModel == '单词图鉴'">
            AND v.recordpicurl IS NOT NULL
        </if>
        AND uv.vocabulary_id NOT IN (
        SELECT
        l.vocabulary_id
        FROM
        learn l
        WHERE
        l.student_id = #{studentId}
        AND l.vocabulary_id = v.id
        AND
        l.course_id = #{courseId}
        AND l.study_model = #{studyModel}
        )
    </select>
    <select id="selectUnitIdsNotInIds" resultType="java.lang.Long" parameterType="map">
        select unit_id
        from unit_vocabulary_new
        where vocabulary_id = #{nv.vocabularyId} ${nv.str}
    </select>

    <select id="getWordIdByCourse" resultType="map" parameterType="map">
        SELECT a.id,
               a.word,
               a.word_chinese,
               a.recordpicurl
        FROM vocabulary a
                 JOIN unit_vocabulary_new b ON a.id = b.vocabulary_id
                 JOIN unit_new c ON b.unit_id = c.id
            AND recordpicurl IS NOT NULL
            AND a.delStatus = 1
            AND b.unit_id &lt;&gt; #{unidId}
            AND a.id &lt;&gt; #{correctWordId}
            AND course_id = #{courseId}
        ORDER BY rand()
        LIMIT 3
    </select>

    <select id="getWordIdNewByCourse" resultType="map" parameterType="map">
        SELECT a.id,
               a.word,
               a.word_chinese,
               a.recordpicurl
        FROM vocabulary a
                 JOIN unit_vocabulary_new b ON a.id = b.vocabulary_id
                 JOIN unit_new c ON b.unit_id = c.id
            AND recordpicurl IS NOT NULL
            AND a.delStatus = 1
            AND b.unit_id &lt;&gt; #{unidId}
            AND a.id &lt;&gt; #{correctWordId}
        ORDER BY rand()
        LIMIT 3
    </select>

    <select id="getWordPicAll" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="unite_Column_List"/>
        from unit_vocabulary_new a
        join vocabulary v on a.vocabulary_id = v.id
        and a.unit_id = #{unitId} and v.recordpicurl is not null and v.delStatus = 1 and a.group=#{group}
    </select>
    <select id="getWordIdByCourseAll" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="unite_Column_List"/>
        FROM vocabulary v
        JOIN unit_vocabulary_new b ON v.id = b.vocabulary_id
        JOIN unit_new c ON b.unit_id = c.id
        AND recordpicurl IS NOT NULL
        AND v.delStatus = 1
        AND course_id = #{courseId}
    </select>
    <select id="getWordIdByAll" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from vocabulary
        where recordpicurl is not NULL
        ORDER BY RAND()
        LIMIT ${size}
    </select>
    <select id="getWordIdByUnit" resultType="java.util.Map" parameterType="map">
        SELECT
        <include refid="unite_Column_List"/>
        FROM vocabulary v
        JOIN unit_vocabulary_new b ON v.id = b.vocabulary_id
        AND recordpicurl IS NOT NULL
        AND v.delStatus = 1
        AND v.id &lt;&gt; #{id}
        AND b.unit_id = #{unitId}
        ORDER BY rand()
        LIMIT 3
    </select>
    <select id="selectByUnitIdAndStudyModel" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary
        v, unit_vocabulary_new uv
        where uv.unit_id = #{unitId}
        AND v.id = uv.vocabulary_id AND v.delStatus = 1
        <if test="studyModel == '单词图鉴'">
            AND v.recordpicurl IS NOT NULL
        </if>
    </select>
    <select id="selectByCourseIdAndStudyModel" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v, unit_vocabulary_new uv, unit_new u
        WHERE v.delStatus = 1 AND v.id = uv.vocabulary_id AND u.id = uv.unit_id
        <if test="studyModel == '单词图鉴'">
            AND v.recordpicurl IS NOT NULL
        </if>
        AND u.course_id = #{courseId}
    </select>
    <select id="getMemoryWordPicAll" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="unite_Column_List"/>
        from capacity_picture a
        JOIN vocabulary v ON a.vocabulary_id = v.id
        AND a.student_id = #{studentId} AND a.unit_id = #{unit_id} AND a.push &lt; #{data} and
        a.memory_strength &lt; 1 AND v.delStatus = 1
    </select>
    <select id="selectWordChineseByVersionAndWordId" resultType="java.lang.String" parameterType="map">
        SELECT DISTINCT
        uv.word_chinese
        FROM
        vocabulary v,
        unit_vocabulary_new uv,
        course_new c,
        unit_new u
        WHERE
        v.id = uv.vocabulary_id
        AND uv.unit_id = u.id
        AND u.course_id = c.id
        AND v.delStatus = 1
        AND c.delStatus = 1
        AND u.delStatus = 1
        AND c.version = #{version}
        <if test="phase == '初中'">
            AND c.grade = '七年级'
        </if>
        <if test="phase == '高中'">
            AND c.grade = '高一'
        </if>
        AND v.id = #{wordId}
        LIMIT 1;
    </select>
    <select id="countByModel" resultType="java.lang.Integer">
        <if test="model == 0">
            select count(*) from unit_vocabulary_new a JOIN vocabulary b ON a.vocabulary_id = b.id
            and a.unit_id = #{unitId} AND b.delStatus = 1 AND b.recordpicurl is not NULL
        </if>
        <if test="model == 1 or model == 2 or model == 3">
            select count(*) from unit_vocabulary_new a JOIN vocabulary b ON a.vocabulary_id = b.id
            and a.unit_id = #{unitId} AND b.delStatus = 1
        </if>
        <if test="model == 4 or model == 5 or model == 6">
            select count(*) FROM unit_sentence a JOIN sentence b ON a.sentence_id = b.id
            AND a.unit_id = #{unitId}
        </if>

    </select>
    <select id="selectWordVoice" resultType="com.zhidejiaoyu.common.pojo.Vocabulary" parameterType="map">
        SELECT
        distinct
        <include refid="unite_Column_List"/>
        FROM vocabulary v join unit_vocabulary_new uv on v.id =
        uv.vocabulary_id
        where uv.unit_id = #{unitId}
        and uv.group =#{group}
        AND v.delStatus = 1
    </select>
    <select id="selectUnlearnInBookPlayer" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="unite_Column_List"/>
        from unit_vocabulary_new u,
        vocabulary v
        where u.vocabulary_id = v.id
        and v.delStatus = 1
        and u.unit_id = #{unitId}
        and v.id not in (
        select word_id from player where student_id = #{studentId} and unit_id = u.unit_id and type = 2
        )
        order by v.id
    </select>
    <select id="selectByCourseIdNotInWord" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        v.id, v.word, uv.word_chinese
        FROM vocabulary v, unit_vocabulary_new uv, unit_new u
        WHERE v.delStatus = 1 AND v.id = uv.vocabulary_id AND u.id = uv.unit_id AND
        u.course_id = #{courseId}
        <if test="wordMapList.size > 0">
            and v.word not in (
            <foreach collection="wordMapList" item="map" separator=",">
                #{map.word}
            </foreach>
            )
        </if>
        group by v.id
    </select>
    <select id="selectByWord" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from vocabulary where binary word = #{word} limit 1
    </select>
    <select id="selectWordByCourseId" resultType="java.util.Map" parameterType="map">
        SELECT
        distinct
        v.word, uv.word_chinese wordChinese
        FROM vocabulary v, unit_vocabulary_new uv, unit_new u
        WHERE v.delStatus = 1 AND v.id = uv.vocabulary_id AND u.id = uv.unit_id AND
        u.course_id = #{courseId}
        <if test="wordIds.size > 0">
            and v.id not in (
            <foreach collection="wordIds" item="id" separator=",">
                #{id}
            </foreach>
            )
        </if>
        limit #{limitStart}, #{limitEnd}
    </select>
    <select id="selectPictureWordFromLearned" resultType="java.util.Map" parameterType="map">
        SELECT
        <include refid="unite_Column_List"/>
        FROM vocabulary v,
        learn l
        where v.id = l.vocabulary_id
        and v.recordpicurl is not null
        and student_id = #{studentId}
        limit #{limit}
    </select>
    <select id="selectPictureWord" resultType="java.util.Map" parameterType="map">
        SELECT v.id,
               v.word,
               uv.word_chinese,
               v.recordpicurl,
               v.small_picture_url  smallPictureUrl,
               v.middle_picture_url middlePictureUrl,
               v.high_picture_url   highPictureUrl,
               v.sound_mark
        FROM vocabulary v,
             unit_vocabulary_new uv
        WHERE v.id = uv.vocabulary_id
          AND uv.unit_id = #{unitId}
          AND v.recordpicurl is not NULL
          AND v.delStatus = 1
        LIMIT #{plan}, 1
    </select>

    <select id="selectByStartUnitIdAndEndUnitId" resultMap="BaseResultMap" parameterType="map">
        select t.id,
               t.word,
               t.word_chinese,
               t.example_english,
               t.example_chinese,
               t.explain_,
               t.create_time,
               t.update_time,
               t.course_unit,
               t.syllable,
               t.delStatus,
               t.recordpicurl,
               t.read_url
        from (select v.id,
                     v.word,
                     uv.word_chinese,
                     if(uv.word_chinese like '%.%' and (LENGTH(SUBSTRING_INDEX(uv.word_chinese, '.', 1)) > 6), 1, 0) i,
                     v.example_english,
                     v.example_chinese,
                     v.explain_,
                     v.create_time,
                     v.update_time,
                     v.course_unit,
                     v.syllable,
                     v.delStatus,
                     v.recordpicurl,
                     v.read_url
              from unit_vocabulary_new uv,
                   vocabulary v
              where v.id = uv.vocabulary_id
                and uv.unit_id >= #{startUnitId}
                and uv.unit_id &lt;= #{endUnitId}
                and uv.word_chinese not like '%……%') t
        where t.i = 0

    </select>
    <select id="selectByCourseIdWithoutWordIds" resultMap="BaseResultMap" parameterType="map">
        select t.id, t.word, t.word_chinese, t.example_english,
        t.example_chinese,
        t.explain_,
        t.create_time,
        t.update_time,
        t.course_unit,
        t.syllable,
        t.delStatus,
        t.recordpicurl,
        t.read_url from (
        SELECT
        v.id, v.word, uv.word_chinese, v.example_english,
        v.example_chinese,
        v.explain_,
        v.create_time,
        v.update_time,
        v.course_unit,
        v.syllable,
        v.delStatus,
        v.recordpicurl,
        v.read_url,
        if(uv.word_chinese like '%.%' and (LENGTH(SUBSTRING_INDEX(uv.word_chinese, '.', 1)) > 6), 1, 0) i
        FROM vocabulary v, unit_vocabulary_new uv, unit_new u
        WHERE v.delStatus = 1 AND v.id = uv.vocabulary_id AND u.id = uv.unit_id AND
        u.course_id = #{courseId}
        <if test="vocabularies.size > 0">
            and v.id not in (
            <foreach collection="vocabularies" item="item" separator=",">
                #{item.id}
            </foreach>
            )
        </if>
        and
        uv.word_chinese not like '%……%'
        group by v.id) t where t.i = 0
    </select>
    <select id="selectByPhaseNotInWord" resultMap="BaseResultMap" parameterType="map">
        SELECT
        distinct
        v.id, v.word, uv.word_chinese
        FROM vocabulary v, unit_vocabulary_new uv, unit_new u, course_new c
        WHERE v.delStatus = 1 AND v.id = uv.vocabulary_id AND u.id = uv.unit_id AND
        u.course_id = c.id and c.study_paragraph = #{studyParagraph}
        <if test="ignoreList.size > 0">
            and v.word not in (
            <foreach collection="ignoreList" item="map" separator=",">
                #{map.word}
            </foreach>
            )
        </if>
        group by v.id
    </select>
    <select id="selectPictureRandom" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from vocabulary
        where recordpicurl is not null
        limit #{offset}, #{limit}
    </select>


    <select id="selByStudentIdLimitTen" resultType="string" parameterType="map">
        select voca.word from vocabulary voca
        <if test="type==1">
            join learn on learn.vocabulary_id=voca.id
            where learn.student_id=#{studentId}
            and study_model in ('慧记忆','慧听写','慧默写','单词图鉴','例句听力''例句翻译','例句默写')
            and learn.vocabulary_id is not null
            and LENGTH(voca.word) &lt; 10
            group by vocabulary_id
        </if>
        <if test="type!=1">
            where LENGTH(voca.word) &lt; 10
        </if>
        limit #{start}, 10
    </select>

    <select id="selCountByStudentIdLimitTen" resultType="integer" parameterType="map">
        select count(distinct voca.id) from vocabulary voca
        <if test="type==1">
            join learn on learn.vocabulary_id=voca.id
            where learn.student_id=#{studentId}
            and study_model in ('慧记忆','慧听写','慧默写','单词图鉴','例句听力''例句翻译','例句默写')
            and learn.vocabulary_id is not null
            and LENGTH(voca.word) &lt; 10
        </if>
        <if test="type!=1">
            where LENGTH(voca.word) &lt; 10
        </if>
    </select>

    <select id="selRandWord" resultType="string" parameterType="map">
        select voca.word from vocabulary voca
        where
        <if test="type==1">
            LENGTH(voca.word) &lt; 10
        </if>
        <if test="type==2">
            LENGTH(voca.word) = #{leng}
        </if>
        limit #{start} ,
        <if test="max==1">
            15
        </if>
        <if test="max==2">
            1
        </if>
    </select>
    <select id="selCountRandWord" resultType="integer" parameterType="map">
        select count(distinct voca.word) from vocabulary voca
        where
        <if test="type==1">
            LENGTH(voca.word) &lt; 10
        </if>
        <if test="type==2">
            LENGTH(voca.word) = #{leng}
        </if>
    </select>

    <select id="selectByJointName" resultMap="BaseResultMap" parameterType="map">
        select v.word, uv.word_chinese
        from unit_new u,
             unit_vocabulary_new uv,
             vocabulary v
        where u.id = uv.unit_id
          and v.id = uv.vocabulary_id
          and u.joint_name = #{jointName}
        group by v.id
    </select>
    <select id="countPicture" resultType="java.lang.Integer">
        select count(v.id)
        from vocabulary v,
             unit_vocabulary_new uv
        where uv.unit_id = #{unitId}
          and uv.vocabulary_id = v.id
          and (v.small_picture_url is not null
            or v.middle_picture_url is not null
            or v.high_picture_url is not null)
    </select>
    <select id="selectSubjectsVOByUnitIds"
            resultType="com.zhidejiaoyu.common.vo.testVo.beforestudytest.SubjectsVO" parameterType="map">
        select
        uvn.unit_id unitId,
        v.read_url readUrl,
        v.word_chinese wordChinese,
        v.word
        from vocabulary v, unit_vocabulary_new uvn
        where
        uvn.unit_id in (
        <foreach collection="unitIds" separator="," item="unitId">
            #{unitId}
        </foreach>
        )
        and v.id = uvn.vocabulary_id
    </select>
    <select id="selectSubjectsVO"
            resultType="com.zhidejiaoyu.common.vo.testVo.beforestudytest.SubjectsVO" parameterType="map">
        select v.read_url     readUrl,
               v.word_chinese wordChinese,
               v.word
        from vocabulary v
        where length(word) &lt; 15
        order by rand()
        limit 30
    </select>
    <select id="selectChineseByNotVocabularyIds" resultType="string" parameterType="map">
        select
        word_chinese
        from vocabulary
        where
        id not in (
        <foreach collection="wordIds" item="word" separator=",">
            #{word}
        </foreach>
        )
        limit 20
    </select>
    <select id="selectWordAndReadUrlByWords" resultType="java.util.Map" parameterType="map">
        select word, read_url readUrl from vocabulary where word in (
        <foreach collection="words" item="word" separator=",">
            #{word}
        </foreach>
        )
    </select>


</mapper>
