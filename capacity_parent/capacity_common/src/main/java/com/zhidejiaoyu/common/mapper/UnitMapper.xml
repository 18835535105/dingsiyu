<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidejiaoyu.common.mapper.UnitMapper">
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.Unit">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="unit_name" property="unitName" jdbcType="VARCHAR"/>
        <result column="joint_name" property="jointName" jdbcType="VARCHAR"/>
        <result column="del_status" property="delStatus" jdbcType="INTEGER"/>
        <result column="unit_index" property="unitIndex" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, course_id, unit_name, joint_name
    </sql>


    <select id="selectIdAndUnitNameByCourseId" parameterType="int" resultType="map">
        select id,
               unit_name
        from unit_new
        where course_id = #{courseId}
    </select>
    <select id="getCourseNameAndUnitName" parameterType="map" resultType="map">
        SELECT a.course_name,
               b.unit_name
        from course_new a
                 JOIN unit_new b ON a.id = b.course_id AND a.id = #{courseId} AND b.id = #{unitId}
    </select>
    <select id="selectIdMapByCourseIdAndWordIds" resultType="java.util.Map" parameterType="map">
        SELECT
        uv.vocabulary_id id,
        u.id unitId
        FROM
        unit_new u,
        unit_vocabulary_new uv,
        learn l
        WHERE
        uv.unit_id = u.id
        AND l.vocabulary_id = uv.vocabulary_id
        and l.unit_id = u.id
        and l.student_id = #{student_id}
        and u.id = uv.unit_id
        and l.course_id = #{courseId}
        AND l.study_model =
        <if test="model == 0">
            '单词图鉴'
        </if>
        <if test="model == 1">
            '慧记忆'
        </if>
        <if test="model == 2">
            '慧听写'
        </if>
        <if test="model == 3">
            '慧默写'
        </if>
        AND u.course_id = #{courseId}
        AND uv.vocabulary_id IN(
        <foreach collection="wordIds" item="id" separator=",">
            #{id}
        </foreach>
        )
    </select>

    <select id="selectUnitsByCourseId" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from unit_new where course_id = #{courseId} order by id
    </select>
    <select id="selectByPrimaryKeys" resultMap="BaseResultMap" parameterType="map">
        select *
        from unit_new where id in (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        );
    </select>
    <select id="selectIdByPhase" resultType="java.lang.Long" parameterType="map">
        SELECT u.id
        FROM course_new c,
             unit_new u,
             student_unit su
        WHERE c.id = u.course_id
          AND su.unit_id = u.id
          AND su.student_id = #{student.id}
          AND c.study_paragraph = #{phase}
          AND c.`status` = 1
          AND u.delStatus = 1
    </select>
    <select id="selectUnitIdAndUnitNameByCourseIdAndStudentId" resultType="java.util.Map" parameterType="map">
        select u.id, u.unit_name unitName
        from unit_new u,
             student_unit su
        where u.id = su.unit_id
          and u.course_id = #{courseId}
          and su.student_id = #{studentId}
        order by u.id asc
    </select>


</mapper>
