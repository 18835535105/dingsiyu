<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidejiaoyu.common.mapper.CapacityReviewMapper">
    <!-- capacity_memory 记忆追踪-智能记忆 --> <!-- sentence_listen 例句听力 -->
    <!-- capacity_listen 记忆追踪-智能听写 --> <!-- sentence_translate 例句翻译 -->
    <!-- capacity_write 记忆追踪-智能默写 --> <!-- sentence_write 例句默写 -->

    <!--单词记忆追踪列名-->
	<sql id="word_sql">
        student_id,
		course_id,
		unit_id,
        vocabulary_id,
		word,
		syllable,
        word_chinese,
		fault_time,
		push,
        memory_strength
	</sql>

	<!--例句记忆追踪列名-->
    <sql id="sentence_sql">
		student_id,
		course_id,
        unit_id,
		vocabulary_id,
        word,
        word_chinese,
		fault_time,
        push,
        memory_strength
    </sql>

    <!--多表查询返回结果-->
    <sql id="more_table_sql">
        cr.student_id,
        cr.course_id,
        cr.unit_id,
        cr.vocabulary_id,
        cr.word,
        <if test="studyModel != '例句听力' and studyModel != '例句翻译' and studyModel != '例句默写'">
        cr.syllable,
        </if>
        cr.word_chinese,
        cr.fault_time,
        cr.push,
        cr.memory_strength
    </sql>

    <sql id="classify_sql">
        <if test="classify == 0">
            capacity_picture
        </if>
        <if test="classify == 1">
			capacity_memory
		</if>
        <if test="classify == 2 ">
            capacity_listen
		</if>
		<if test="classify == 3 ">
			capacity_write
		</if>
        <if test="classify == 4 ">
			sentence_listen
        </if>
        <if test="classify == 5 ">
			sentence_translate
		</if>
		<if test="classify == 6 ">
			sentence_write
        </if>
    </sql>

    <sql id="studyModel_sql">
        <if test="studyModel == '慧记忆'">
            capacity_memory
        </if>
        <if test="studyModel == '慧听写' ">
        capacity_listen
        </if>
        <if test="studyModel == '慧默写' ">
            capacity_write
        </if>
        <if test="studyModel == '单词图鉴'">
            capacity_picture
        </if>
        <if test="studyModel == '例句听力' ">
            sentence_listen
        </if>
        <if test="studyModel == '例句翻译' ">
            sentence_translate
        </if>
        <if test="studyModel == '例句默写'">
            sentence_write
        </if>
    </sql>

    <!--多表查询关联表-->
    <sql id="more_table_studyModel_sql">
        <if test="studyModel == '慧记忆'">
            capacity_memory cr
        </if>
        <if test="studyModel == '慧听写' ">
            capacity_listen cr
        </if>
        <if test="studyModel == '慧默写' ">
            capacity_write cr
        </if>
        <if test="studyModel == '单词图鉴'">
            capacity_picture cr
        </if>
        <if test="studyModel == '例句听力' ">
            sentence_listen cr
        </if>
        <if test="studyModel == '例句翻译' ">
            sentence_translate cr
        </if>
        <if test="studyModel == '例句默写'">
            sentence_write cr
        </if>
    </sql>
    <sql id="table_studyModel_sql_vocAndSen">
        <if test="studyModel == '例句听力' or studyModel == '例句翻译' or studyModel =='例句默写'">
            sentence v
        </if>
        <if test="studyModel == '慧记忆' or studyModel == '慧听写' or  studyModel == '慧默写' or studyModel == '单词图鉴'">
            vocabulary v
        </if>
    </sql>

    <insert id="insertByBatch" parameterType="map">
		INSERT INTO <include refid="classify_sql"/>
		<if test="classify &lt;= 3">
			(<include refid="word_sql"/>)
			VALUES
			<foreach collection="capacityReviews" separator="," item="capacityReview">
				(#{capacityReview.student_id}, #{capacityReview.course_id},
				#{capacityReview.unit_id},
				#{capacityReview.vocabulary_id},
				#{capacityReview.word},
				#{capacityReview.syllable},
				#{capacityReview.word_chinese},
				#{capacityReview.fault_time},
				#{capacityReview.push},
				#{capacityReview.memory_strength})
			</foreach>
		</if>
		<if test="classify	 >= 4">
			(<include refid="sentence_sql"/>)
			VALUES
			<foreach collection="capacityReviews" separator="," item="capacityReview">
				(#{capacityReview.student_id},
				#{capacityReview.course_id},
				#{capacityReview.unit_id},
				#{capacityReview.vocabulary_id},
				#{capacityReview.word},
				#{capacityReview.word_chinese},
				#{capacityReview.fault_time},
				#{capacityReview.push},
				#{capacityReview.memory_strength})
			</foreach>
		</if>
	</insert>

    <select id="countCapacity_memory" resultType="int" parameterType="com.zhidejiaoyu.common.pojo.CapacityReview">
		<!-- 学生id , 单元id , 1...分类表 -->
		select count(a.id) from
        <include refid="classify_sql"/>
        a
        <if test="classify &lt;= 3">
            join vocabulary b on a.vocabulary_id = b.id
            and a.student_id = #{student_id} and a.unit_id = #{unit_id} and a.push &lt; #{push} and a.memory_strength
            &lt; 1 and b.delStatus = 1
        </if>
        <if test="classify &gt;= 4">
            join sentence b on a.vocabulary_id = b.id
            and a.student_id = #{student_id} and a.unit_id = #{unit_id} and a.push &lt; #{push} and a.memory_strength
            &lt; 1
        </if>

    </select>

    <resultMap id="Vocabulary_map" type="com.zhidejiaoyu.common.pojo.Vocabulary">
    	<result column="vocabulary_id" property="id" jdbcType="BIGINT" />
    	<result column="word" property="word" jdbcType="VARCHAR" />
    	<result column="word_chinese" property="wordChinese" jdbcType="VARCHAR" />
  	</resultMap>
	<!-- 根据模块,学生id,单元: 查询记忆追踪 词汇 需要复习的单词 -->
    <select id="selectCapacity" parameterType="com.zhidejiaoyu.common.pojo.CapacityReview" resultMap="Vocabulary_map">
		select vocabulary_id, word, word_chinese from  
		<include refid="classify_sql" />
		where push &lt; #{push} and student_id = #{student_id} and unit_id = #{unit_id} order by push asc
	</select>

    <select id="selectMemory_strength" parameterType="com.zhidejiaoyu.common.pojo.CapacityReview" resultType="Double">
		select memory_strength from 
		<include refid="classify_sql" />
		where student_id = #{student_id} and word = #{word}
			<if test="unit_id != null and unit_id!='' ">
				and unit_id = #{unit_id}  
			</if>
	</select>

    <update id="updateMemory_strength" parameterType="com.zhidejiaoyu.common.pojo.CapacityReview">
		update <include refid="classify_sql" />
		 set memory_strength = #{memory_strength} 
		 where student_id = #{student_id} and word = #{word}
			<if test="unit_id != null and unit_id !='' ">
				and unit_id = #{unit_id}  
			</if>
	</update>
	
	<!-- 智能复习单词,翻译 -->
    <select id="ReviewCapacity_memory" parameterType="com.zhidejiaoyu.common.pojo.CapacityReview"
            resultType="com.zhidejiaoyu.common.pojo.CapacityReview">
	select a.vocabulary_id, a.word, a.word_chinese , a.memory_strength , a.fault_time, a.syllable, a.unit_id
	from
	<include refid="classify_sql" /> a join vocabulary b on a.vocabulary_id = b.id
	where a.push &lt; #{push}
	and a.student_id = #{student_id}
	<if test="unit_id != null and unit_id != '' ">
		and a.unit_id = #{unit_id}
	</if>
	<if test="course_id != null and course_id != '' ">
		and a.course_id = #{course_id}
	</if>
	and b.delStatus = 1
	and a.memory_strength &lt; 1
	order by a.push asc limit 0,1
</select>
	
	<!-- 修改黄金记忆时间 -->
    <update id="updatePush" parameterType="com.zhidejiaoyu.common.pojo.CapacityReview">
		update 
		<include refid="classify_sql" />
		set 
			push = #{push} 
		where 
			student_id = #{student_id} and word = #{word} 
			<if test="unit_id != null and unit_id !='' ">
				and unit_id = #{unit_id} 
			</if> 
	</update>
	
	<!-- 修改学习信息表 -->
    <update id="updateLearn" parameterType="com.zhidejiaoyu.common.pojo.CapacityReview">
		update learn 
			set study_count = study_count + 1  
		where 
			student_id = #{student_id}
			
			<if test="unit_id != null and unit_id !='' ">
				and unit_id = #{unit_id} 
			</if> 
			
			<if test="classify == 1 or classify == 2 or classify == 3">
				and vocabulary_id = #{vocabulary_id}
			</if>
			<if test="classify == 4 or classify == 5 or classify == 6">
				and example_id = #{vocabulary_id}
			</if>
			
			<if test="classify == 1">
				and study_model = '慧记忆' 
			</if>
			<if test="classify == 2">
				and study_model = '慧听写' 
			</if>
			<if test="classify == 3">
				and study_model = '慧默写' 
			</if>
			<if test="classify == 4">
				and study_model = '例句听力' 
			</if>
			<if test="classify == 5">
				and study_model = '例句翻译' 
			</if>
			<if test="classify == 6">
				and study_model = '例句默写' 
			</if>
	</update>
	
	<!-- 成为熟词 -->
    <update id="updateLearnStudy_count" parameterType="com.zhidejiaoyu.common.pojo.CapacityReview">
		update learn 
			set study_count = study_count + 1 , status = 1 
		where 
			student_id = #{student_id}
			
			<if test="unit_id != null and unit_id !='' ">
				and unit_id = #{unit_id} 
			</if> 
			
			<if test="classify == 1 or classify == 2 or classify == 3">
				and vocabulary_id = #{vocabulary_id}
			</if>
			<if test="classify == 4 or classify == 5 or classify == 6">
				and example_id = #{vocabulary_id}
			</if>
			
			<if test="classify == 1">
				and study_model = '慧记忆' 
			</if>
			<if test="classify == 2">
				and study_model = '慧听写' 
			</if>
			<if test="classify == 3">
				and study_model = '慧默写' 
			</if>
			<if test="classify == 4">
				and study_model = '例句听力' 
			</if>
			<if test="classify == 5">
				and study_model = '例句翻译' 
			</if>
			<if test="classify == 6">
				and study_model = '例句默写' 
			</if>
	</update>
	<update id="updatePushAndMemoryStrengthByPrimaryKeys" parameterType="map">
		UPDATE
		<include refid="classify_sql"/>
		SET push = #{push}, memory_strength = #{memoryStrength} WHERE id in (
		<foreach collection="updateIds" separator="," item="id">
			#{id}
		</foreach>
		)
	</update>

    <resultMap id="fiveDimensionTest_Map" type="com.zhidejiaoyu.common.pojo.Vocabulary">
		<id column="id" property="id"/>
		<result column="word" property="word"/>
		<result column="word_chinese" property="wordChinese"/>
	</resultMap>
	<select id="fiveDimensionTest" parameterType="string" resultMap="fiveDimensionTest_Map">
		select c.id,c.word, c.word_chinese from unit a INNER JOIN unit_vocabulary b on a.id = b.unit_id INNER JOIN vocabulary c on b.vocabulary_id = c.id and a.course_id = #{course_id} and c.delStatus = 1 LIMIT 0, ${b}
	</select>
    <select id="selectByWordIdsAndStudyModel" resultType="java.lang.Long" parameterType="map">
        SELECT
        id
        FROM
        <include refid="classify_sql"/>
        WHERE student_id = #{student.id} AND course_id = #{courseId}
        <if test="unitId != 0">
            AND unit_id = #{unitId}
        </if>
        AND vocabulary_id IN (
        <foreach collection="wordIds" item="id" separator=",">
            #{id}
        </foreach>
        )
    </select>
    <select id="fiveDimensionTestTwo" parameterType="string" resultMap="fiveDimensionTest_Map">
		select c.id,c.word, c.word_chinese from unit a INNER JOIN unit_vocabulary b on a.id = b.unit_id INNER JOIN vocabulary c on b.vocabulary_id = c.id and a.course_id = #{course_id} and c.delStatus = 1 LIMIT ${b},${c}
	</select>
    <select id="selectByCourseIdOrUnitId" resultType="com.zhidejiaoyu.common.pojo.CapacityReview" parameterType="map">
        select
		<if test="studyModel != '例句听力' and studyModel != '例句翻译' and studyModel != '例句默写'">
			<include refid="word_sql"/>
		</if>
		<if test="studyModel == '例句听力' or studyModel == '例句翻译' or studyModel == '例句默写'">
			<include refid="sentence_sql"/>
		</if>
        from
        <include refid="studyModel_sql"/>
        where student_id = #{student.id}
        <if test="unitId == 0">
            and course_id = #{courseId}
        </if>
        <if test="unitId != 0">
            and unit_id = #{unitId}
        </if>
        and vocabulary_id =#{id} group by vocabulary_id
    </select>
    <select id="selectNewWordsByCourseIdOrUnitId" resultType="com.zhidejiaoyu.common.pojo.CapacityReview"
            parameterType="map">
        select
        <include refid="more_table_sql"/>
        from
        <include refid="more_table_studyModel_sql"/>, <include refid="table_studyModel_sql_vocAndSen"/>
        where
        cr.vocabulary_id = v.id
        <if test="studyModel == '慧记忆' or studyModel == '慧听写' or  studyModel == '慧默写' or studyModel == '单词图鉴'">
            and v.delStatus = 1
        </if>
        and cr.memory_strength &lt; 1
        and cr.student_id = #{student.id}
        and cr.course_id = #{courseId}
        <if test="unitId != 0">
            and cr.unit_id = #{unitId}
        </if>
        order by cr.push asc
    </select>
    <select id="countNeedReviewByCourseIdOrUnitId" resultType="java.lang.Integer" parameterType="map">
        select
        count(distinct cr.vocabulary_id)
        from
        <include refid="more_table_studyModel_sql"/>, <include refid="table_studyModel_sql_vocAndSen"/>
        where
        cr.vocabulary_id = v.id
        <if test="studyModel == '慧记忆' or studyModel == '慧听写' or  studyModel == '慧默写' or studyModel == '单词图鉴'">
            and v.delStatus = 1
        </if>
        and cr.memory_strength &lt; 1
        and cr.student_id = #{student.id}
        <if test="courseId != null">
            and cr.course_id = #{courseId}
        </if>
        and cr.push &lt; now()
        <if test="unitId != 0">
            and cr.unit_id = #{unitId}
        </if>
        order by push asc
    </select>
    <select id="selectSentenceCapacity" resultType="com.zhidejiaoyu.common.pojo.CapacityReview" parameterType="map">
        SELECT * from
        <include refid="classify_sql"/>
        where student_id = #{studentId} and unit_id = #{unitId} and push &lt;= now()
    </select>
    <select id="selectSentenceCapacitys" resultType="com.zhidejiaoyu.common.pojo.CapacityReview" parameterType="map">
        SELECT * from
        <include refid="classify_sql"/>
        where student_id = #{studentId}  and push &lt;= now() limit 1
    </select>


    <select id="selectPictureNeedReviewInCurrentCourse" resultType="java.util.Map" parameterType="map">
        select cp.vocabulary_id id, cp.word
        from capacity_picture cp,
             vocabulary v
        where cp.course_id = (select course_id from learn where student_id = #{stuId} order by id desc limit 1)
          and cp.vocabulary_id = v.id
          and v.delStatus = 1
          and cp.memory_strength &lt; 1
          and cp.push &lt;= now()
          and student_id = #{stuId}
        limit 10
    </select>
    <select id="selectMemoryNeedReviewInCurrentCourse" resultType="java.util.Map" parameterType="map">
        select cm.vocabulary_id id, cm.word
        from capacity_memory cm,
        vocabulary v
        where cm.course_id = (select course_id from learn where student_id = #{stuId} order by id desc limit 1)
        and cm.vocabulary_id = v.id
        and v.delStatus = 1
        <if test="wordIds.size > 0">
            and v.id not in (
            <foreach collection="wordIds" separator="," item="wordId">
                #{wordId}
            </foreach>
            )
        </if>
        and cm.memory_strength &lt; 1
        and cm.push &lt;= now()
        and student_id = #{stuId}
        limit #{limit}
    </select>
    <select id="selectListenNeedReviewInCurrentCourse" resultType="java.util.Map" parameterType="map">
        select cl.vocabulary_id id, cl.word
        from capacity_listen cl,
        vocabulary v
        where cl.course_id = (select course_id from learn where student_id = #{stuId} order by id desc limit 1)
        and cl.vocabulary_id = v.id
        and v.delStatus = 1
        <if test="wordIds.size > 0">
            and v.id not in (
            <foreach collection="wordIds" separator="," item="wordId">
                #{wordId}
            </foreach>
            )
        </if>
        and cl.memory_strength &lt; 1
        and cl.push &lt;= now()
        and student_id = #{stuId}
        limit #{limit}
    </select>
    <select id="selectWriteNeedReviewInCurrentCourse" resultType="java.util.Map" parameterType="map">
        select cw.vocabulary_id id, cw.word
        from capacity_write cw,
        vocabulary v
        where cw.course_id = (select course_id from learn where student_id = #{stuId} order by id desc limit 1)
        and cw.vocabulary_id = v.id
        and v.delStatus = 1
        <if test="wordIds.size > 0">
            and v.id not in (
            <foreach collection="wordIds" separator="," item="wordId">
                #{wordId}
            </foreach>
            )
        </if>
        and cw.memory_strength &lt; 1
        and cw.push &lt;= now()
        and student_id = #{stuId}
        limit #{limit}
    </select>
    <select id="countCapacityByUnitIdAndWordId" resultType="java.lang.Integer" parameterType="map">
        select
        count(c.id)
        from
        <include refid="classify_sql"/>
        c, learn l
        where c.student_id = l.student_id and c.unit_id = l.unit_id and c.vocabulary_id = l.vocabulary_id and l.type = 1
        and c.student_id = #{studentId} and
        c.unit_id in (
        <foreach collection="maps" separator="," item="map">
            #{map.unitId}
        </foreach>
        )
        and c.vocabulary_id in (
        <foreach collection="maps" item="map" separator=",">
            #{map.wordId}
        </foreach>
        ) and l.study_model = #{typeStr} and c.push &lt;= now() and c.memory_strength &lt; 1
    </select>

    <select id="selectLastLoginNeedReview" resultType="java.util.Map" parameterType="map">
        select
        memory_strength memoryStrength, fault_time, vocabulary_id id, unit_id, word, word_chinese wordChinese, syllable wordyj ,course_id courseId
        from
        <include refid="classify_sql"/>
        where student_id = #{studentId} and unit_id in (
        <foreach collection="maps" separator="," item="map">
            #{map.unitId}
        </foreach>
        )
        and vocabulary_id in (
        <foreach collection="maps" item="map" separator=",">
            #{map.wordId}
        </foreach>
        ) and push &lt;= now() and memory_strength &lt; 1 order by push asc limit 1
    </select>
    <select id="countLastLoginNeedReview" resultType="java.lang.Integer" parameterType="map">
        select
        count(id)
        from
        <include refid="classify_sql"/>
        where student_id = #{studentId} and unit_id in (
        <foreach collection="maps" separator="," item="map">
            #{map.unitId}
        </foreach>
        )
        and vocabulary_id in (
        <foreach collection="maps" item="map" separator=",">
            #{map.wordId}
        </foreach>
        ) and push &lt;= now() and memory_strength &lt; 1
    </select>

    <sql id="testCenterSql">
        select count(id)
        from learn
        where student_id = #{studentId}
        and study_model = #{classify}
        and unit_id = #{unitId}
        <if test="flag >= 4">
            and vocabulary_id is null
        </if>
        <if test="flag &lt; 4">
            and example_id is null
        </if>
    </sql>
    <select id="countAlreadyStudyWord" resultType="java.lang.Integer" parameterType="map">
        <include refid="testCenterSql"/> and type=1
    </select>
    <select id="countAccrueWord" resultType="java.lang.Integer" parameterType="map">
        <include refid="testCenterSql"/> and type=1
        and status = 0
    </select>
    <select id="countRipeWord" resultType="java.lang.Integer" parameterType="map">
        <include refid="testCenterSql"/>
        and status = 1 and type=1
    </select>
    <select id="countByPushByCourseId" resultType="java.lang.Integer" parameterType="map">
        select count(id) from
        <include refid="classify_sql"/>
        where student_id = #{studentId} and course_id = #{course} and push &lt; #{now} and memory_strength &lt; 1
    </select>

    <select id="selSentenceCountCapacitys" resultType="integer" parameterType="map">
        SELECT count(id) from
        <include refid="classify_sql"/>
        where student_id = #{studentId}  and push &lt;= now()
    </select>

</mapper>