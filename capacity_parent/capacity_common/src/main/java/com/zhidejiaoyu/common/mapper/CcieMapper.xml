<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidejiaoyu.common.mapper.CcieMapper" >
  <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.Ccie" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="unit_id" property="unitId" jdbcType="BIGINT" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="get_time" property="getTime" jdbcType="TIMESTAMP" />
    <result column="test_type" property="testType" jdbcType="INTEGER" />
    <result column="study_model" property="studyModel" jdbcType="INTEGER" />
    <result column="ccie_no" property="ccieNo" jdbcType="VARCHAR" />
    <result column="encourage_word" property="encourageWord" jdbcType="VARCHAR" />
    <result column="read_flag" property="readFlag" jdbcType="INTEGER" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, student_id, unit_id, student_name, get_time, test_type, study_model, ccie_no,
    encourage_word,
    read_flag,
    course_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhidejiaoyu.common.pojo.CcieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ccie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from ccie
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ccie
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhidejiaoyu.common.pojo.CcieExample" >
    delete from ccie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.zhidejiaoyu.common.pojo.Ccie" >
    insert into ccie
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="unitId != null" >
        unit_id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="getTime != null" >
        get_time,
      </if>
      <if test="testType != null" >
        test_type,
      </if>
      <if test="studyModel != null" >
        study_model,
      </if>
      <if test="ccieNo != null" >
        ccie_no,
      </if>
      <if test="encourageWord != null" >
        encourage_word,
      </if>
      <if test="readFlag != null" >
        read_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="unitId != null" >
        #{unitId,jdbcType=BIGINT},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testType != null" >
        #{testType,jdbcType=INTEGER},
      </if>
      <if test="studyModel != null" >
        #{studyModel,jdbcType=INTEGER},
      </if>
      <if test="ccieNo != null" >
        #{ccieNo,jdbcType=VARCHAR},
      </if>
      <if test="encourageWord != null" >
        #{encourageWord,jdbcType=VARCHAR},
      </if>
      <if test="readFlag != null" >
        #{readFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhidejiaoyu.common.pojo.CcieExample" resultType="java.lang.Integer" >
    select count(*) from ccie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ccie
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.unitId != null" >
        unit_id = #{record.unitId,jdbcType=BIGINT},
      </if>
      <if test="record.studentName != null" >
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.getTime != null" >
        get_time = #{record.getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.testType != null" >
        test_type = #{record.testType,jdbcType=INTEGER},
      </if>
      <if test="record.studyModel != null" >
        study_model = #{record.studyModel,jdbcType=INTEGER},
      </if>
      <if test="record.ccieNo != null" >
        ccie_no = #{record.ccieNo,jdbcType=VARCHAR},
      </if>
      <if test="record.encourageWord != null" >
        encourage_word = #{record.encourageWord,jdbcType=VARCHAR},
      </if>
      <if test="record.readFlag != null" >
        read_flag = #{record.readFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ccie
    set id = #{record.id,jdbcType=BIGINT},
    student_id = #{record.studentId,jdbcType=BIGINT},
    unit_id = #{record.unitId,jdbcType=BIGINT},
    student_name = #{record.studentName,jdbcType=VARCHAR},
    get_time = #{record.getTime,jdbcType=TIMESTAMP},
    test_type = #{record.testType,jdbcType=INTEGER},
    study_model = #{record.studyModel,jdbcType=INTEGER},
    ccie_no = #{record.ccieNo,jdbcType=VARCHAR},
    encourage_word = #{record.encourageWord,jdbcType=VARCHAR},
    read_flag = #{record.readFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhidejiaoyu.common.pojo.Ccie" >
    update ccie
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="unitId != null" >
        unit_id = #{unitId,jdbcType=BIGINT},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        get_time = #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testType != null" >
        test_type = #{testType,jdbcType=INTEGER},
      </if>
      <if test="studyModel != null" >
        study_model = #{studyModel,jdbcType=INTEGER},
      </if>
      <if test="ccieNo != null" >
        ccie_no = #{ccieNo,jdbcType=VARCHAR},
      </if>
      <if test="encourageWord != null" >
        encourage_word = #{encourageWord,jdbcType=VARCHAR},
      </if>
      <if test="readFlag != null" >
        read_flag = #{readFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhidejiaoyu.common.pojo.Ccie" >
    update ccie
    set student_id = #{studentId,jdbcType=BIGINT},
        unit_id = #{unitId,jdbcType=BIGINT},
        student_name = #{studentName,jdbcType=VARCHAR},
        get_time = #{getTime,jdbcType=TIMESTAMP},
        test_type = #{testType,jdbcType=INTEGER},
        study_model = #{studyModel,jdbcType=INTEGER},
        ccie_no = #{ccieNo,jdbcType=VARCHAR},
        encourage_word = #{encourageWord,jdbcType=VARCHAR},
        read_flag = #{readFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectAllCcieByStudentIdAndDate" parameterType="map" resultType="map">
    select
    a.id, a.student_id, a.student_name, date_format(a.get_time, '%Y-%m-%d') AS time,
    (case a.test_type when 1 then '单元闯关' when 2 then '复习测试' when 3 then '已学测试' when 4 then '生词测试' when 5 then '熟词测试'
    when 6
    then '五维测试' end) testName,
 		 (case a.study_model when 1 then '慧记忆' when 2 then '慧听写' when 3 then '慧默写' when 4 then '例句听力'  when 5 then '例句翻译'  when 6 then '例句默写'  when 7 then '五维测试' end) AS model,
    a.ccie_no, a.encourage_word encourageWord, a.course_name courseName
	from 
		ccie a where a.student_id = #{studentId}
		<if test="model != 0">
		  AND a.study_model = #{model}
        </if>
    <if test="type == 1">
      and ccie_no like 'N%'
    </if>
    <if test="type == 2">
      and ccie_no like 'K%'
    </if>
  </select>

    <select id="selectLastCcie" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from ccie
        where student_id = #{student.id}
        and unit_id = #{unitId}
        order by id desc
    </select>
    <select id="getCountCcieByStudentId" resultType="java.lang.Integer" parameterType="map">
      select count(id) from ccie where student_id = #{studentId}
      /*AND get_time >= '2018-08-29 00:00:00'*/
    </select>
  <select id="getMapKeyStudentCCie" resultType="java.util.Map">
    select student_id as id, count(*) as count from ccie GROUP BY student_id
  </select>
  <select id="countCourseCcieByCourseId" resultType="java.lang.Integer" parameterType="map">
    select count(c.id)
    from ccie c,
         unit u
    where c.unit_id = u.id
      and u.course_id = #{courseId}
      and c.student_id = #{studentId}
      and c.ccie_no like 'K%'
  </select>
</mapper>