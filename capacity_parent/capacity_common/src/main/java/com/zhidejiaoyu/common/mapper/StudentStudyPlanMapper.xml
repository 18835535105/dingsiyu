<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidejiaoyu.common.mapper.StudentStudyPlanMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.StudentStudyPlan">
        <id column="id" property="id"/>
        <result column="student_id" property="studentId" />
        <result column="course_id" property="courseId" />
        <result column="start_unit_id" property="startUnitId" />
        <result column="end_unit_id" property="endUnitId" />
        <result column="type" property="type"/>
        <result column="complete" property="complete"/>
        <result column="current_study_count" property="currentStudyCount"/>
        <result column="total_study_count" property="totalStudyCount"/>
        <result column="update_time" property="updateTime" />
    </resultMap>
    <sql id="base_sql">
        id,
        student_id,
        course_id,
        start_unit_id,
        end_unit_id,
        type,
        complete,
        current_study_count,
        total_study_count,
        update_time
    </sql>
    <select id="selectCurrentPlan" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="base_sql"/>
        from student_study_plan where student_id = #{studentId} and start_unit_id = #{startUnit} and end_unit_id =
        #{endUnit} and type = #{type} and
        complete = 1 order by id asc limit 1
    </select>
    <select id="selectNextPlan" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="base_sql"/>
        from student_study_plan where student_id = #{studentId} and type = #{type} and id > #{planId} order by id asc
        limit 1
    </select>
    <select id="countUnlearnedPlan" resultType="java.lang.Integer" parameterType="map">
        select count(id)
        from student_study_plan
        where student_id = #{studentId}
          and type = #{type}
          and complete = 1
    </select>

    <select id="selByStudentId" parameterType="java.util.Map" resultType="java.util.Map">
     select
        course.id id,course.course_name courseName, ssp.start_unit_id unitId,ssp.end_unit_id endUnitId,
        course.grade grade , course.label label,course.version version
        from student_study_plan ssp join teks_course course on ssp.course_id=course.id
        where student_id=#{studentId} and type =#{type} group by course.id;
    </select>

    <select id="selByStudentIdAndCourseIdAndType" parameterType="map" resultType="map">
        select
        course.id id,course.course_name courseName, ssp.start_unit_id unitId,ssp.end_unit_id endUnitId,
        course.grade grade , course.label label,course.version version
        from student_study_plan ssp join teks_course course on ssp.course_id=course.id
        where student_id=#{studentId} and type =#{type} and course.id=#{courseId} group by course.id;
    </select>

    <select id="selBySentenceStudentId" parameterType="java.util.Map" resultType="java.util.Map">
     select
        course.id id,course.course_name courseName, ssp.start_unit_id unitId,ssp.end_unit_id endUnitId,
        course.grade grade , course.label label,course.version version
        from student_study_plan ssp join sentence_course course on ssp.course_id=course.id
        where student_id=#{studentId} and type =#{type} group by course.id;
    </select>
    <select id="selByStudentIdAndCourseId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select <include refid="base_sql"></include> from student_study_plan
        where student_id=#{studentId}
        and course_id=#{courseId}
        and type=#{type}
    </select>
    <select id="selByStudentIdAndCourseIdAndUnitId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select <include refid="base_sql"></include> from student_study_plan
        where student_id=#{studentId}
        and course_id=#{courseId}
        and type=#{type}
        and (start_unit_id &lt;=#{unitId} and end_unit_id>=#{unitId})
    </select>
    <select id="countByStudentIdAndType" resultType="java.lang.Integer" parameterType="map">
        select count(id)
        from student_study_plan
        where student_id = #{studentId}
          and type = #{type}
    </select>
    <select id="selReadCourseByStudentId" parameterType="map" resultMap="BaseResultMap">
        select <include refid="base_sql"></include>
        from student_study_plan
        where student_id=#{studentId}
        <if test="gradeInteger!=null">
            and course_id=#{gradeInteger}
        </if>
        and type = 6
        order by course_id
    </select>
    <select id="selSymbolByStudentId" resultMap="BaseResultMap" parameterType="long">
        select <include refid="base_sql"></include> from student_study_plan where student_id=#{studentId} and type = 5 limit 1
    </select>
    <select id="selLetterByStudentId" resultMap="BaseResultMap" parameterType="long">
        select <include refid="base_sql"></include> from student_study_plan where student_id=#{studentId} and type = 4 limit 1
    </select>
    <select id="selReadByStudentId" resultMap="BaseResultMap" parameterType="long">
        select <include refid="base_sql"></include> from student_study_plan where student_id=#{studentId} and type = 6 limit 1
    </select>
    <select id="selLetterSudyByStudentAndUnitId" parameterType="map" resultMap="BaseResultMap">
        select <include refid="base_sql"></include> from student_study_plan where student_id=#{studentId} and type=4 and (start_unit_id &lt;=#{unitId} and end_unit_id>=#{unitId}) limit 1
    </select>
    <select id="selStudyReadPlanByStudentIdAndUnitId" parameterType="map" resultMap="BaseResultMap">
        select <include refid="base_sql"></include> from student_study_plan where student_id=#{studentId} and type=6 and (start_unit_id &lt;=#{unitId} and end_unit_id>=#{unitId}) limit 1
    </select>
    <select id="selByCourseIdAndUnitIdAndType" parameterType="map" resultMap="BaseResultMap">
        select <include refid="base_sql"></include> from student_study_plan where student_id=#{studentId} and course_id=#{courseId} and type=#{type} and (start_unit_id &lt;=#{unitId} and end_unit_id>=#{unitId}) limit 1
    </select>


</mapper>
