<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidejiaoyu.common.mapper.simple.SimpleStudentExchangePrizeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.StudentExchangePrize">
        <id column="id" property="id" />
        <result column="prize_id" property="prizeId" />
        <result column="student_id" property="studentId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="state" property="state" />
    </resultMap>

    <select id="getAll" parameterType="map" resultType="map">
        select stuprize.create_time time ,stuprize.id id, list.prize prizeName,list.exchange_prize gold, stuprize.state
        from student_exchange_prize stuprize
        join prize_exchange_list list
        on stuprize.prize_id = list.id
        where stuprize.student_id=#{studentId}
        order by stuprize.create_time desc
        <if test="start!=null">
            limit #{start} ,#{number}
        </if>
    </select>
    <delete id="deleteByStudentIds" parameterType="map">
        delete from student_exchange_prize
        where student_id in (
        <foreach collection="studentIds" separator="," item="studentId">
            #{studentId}
        </foreach>
        )
    </delete>
    <select id="selectListByAccountAndName"
            resultType="com.zhidejiaoyu.common.vo.studentExchangPrize.StudentExchangePrizeVo" parameterType="map">
        select sep.id id ,
            student.student_name studentName ,
            sep.create_time createTimes ,
            student.account account ,
            sep.state state ,
            prize.prize prize
        from student_exchange_prize sep
        join prize_exchange_list prize on sep.prize_id=prize.id
        join student student on student.id=sep.student_id
        where
        <if test="type==1">
            prize.school_id =#{adminId}
        </if>
        <if test="type==2">
            student.teacher_id=#{adminId}
        </if>
        <if test="type==3">
            sep.state=0
        </if>
        and sep.state &lt;> 6 and sep.state &lt;> 2
        <if test="studentName!=null and studentName!=''">
            and student.student_name like concat('%',#{studentName},'%')
        </if>
        order by sep.id desc
    </select>

</mapper>
