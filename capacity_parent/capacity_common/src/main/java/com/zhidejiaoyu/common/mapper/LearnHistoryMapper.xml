<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidejiaoyu.common.mapper.LearnHistoryMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.LearnHistory">
        <id column="id" property="id"/>
        <result column="student_id" property="studentId"/>
        <result column="course_id" property="courseId"/>
        <result column="unit_id" property="unitId"/>
        <result column="group" property="group"/>
        <result column="type" property="type"/>
        <result column="easy_or_hard" property="easyOrHard"/>
        <result column="study_count" property="studyCount"/>
        <result column="update_time" property="updateTime"/>
        <result column="state" property="state"/>
    </resultMap>

    <sql id="base_sql">
        id, student_id, course_id, unit_id, `group`, type, easy_or_hard, study_count, update_time, state
    </sql>

    <select id="selectStudyFiveStudent" parameterType="map" resultType="map">
        select student_id studentId,
        (
        (select count(unit_id) from learn_history learn1
        where learn1.student_id = learn.student_id and learn1.state=2 and learn1.easy_or_hard=1) +
        (select count(unit_id) from learn_history learn2
        where learn2.student_id = learn.student_id and learn2.state=2 and learn2.easy_or_hard=2
        )
        ) count
        from learn_history learn
        where student_id in (
        <foreach collection="studentIds" item="id" separator=",">
            #{id}
        </foreach>
        )
        group by student_id;
    </select>
    <select id="selectStudyUnitByStudentId" parameterType="map" resultType="map">
        select distinct(unit_id) unitId, easy_or_hard easyOrHard
        from learn_history
        where student_id = #{studentId}
        group by unit_id, easy_or_hard
    </select>
    <select id="countUnitByStudentIdAndCourseIds" resultType="java.util.Map" parameterType="map">
        select t.courseId, sum(t.count) count from (
        select course_id courseId, count(distinct unit_id) count
        from learn_history
        where student_id = #{studentId}
        and course_id in (
        <foreach collection="courseIds" item="courseId" separator=",">
            #{courseId}
        </foreach>
        )
        and type = #{type}
        and state = 2
        and easy_or_hard = 1
        group by course_id
        union all
        select course_id courseId, count(distinct unit_id) count
        from learn_history
        where student_id = #{studentId}
        and course_id in (
        <foreach collection="courseIds" item="courseId" separator=",">
            #{courseId}
        </foreach>
        )
        and type = #{type}
        and state = 2
        and easy_or_hard = 2
        group by course_id) t
        group by t.courseId
    </select>
    <select id="selectWordListBystudentId" parameterType="map" resultType="long">
        select DISTINCT uv.vocabulary_id
        from learn_history his
                 join unit_vocabulary_new uv
                      on his.unit_id = uv.unit_id and his.`group` = uv.`group`
        where his.student_id = #{studentId}
    </select>
    <select id="selectByUpdateTime" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="base_sql"/>
        FROM
        learn_history
        WHERE
        TO_DAYS(update_time) = TO_DAYS(#{date});
    </select>


</mapper>
