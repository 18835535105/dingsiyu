<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidejiaoyu.common.mapper.CapacityPictureMapper" >
  <resultMap id="BaseResultMap" type="com.zhidejiaoyu.common.pojo.CapacityPicture" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="unit_id" property="unitId" jdbcType="BIGINT" />
    <result column="vocabulary_id" property="vocabularyId" jdbcType="BIGINT" />
    <result column="word" property="word" jdbcType="VARCHAR" />
    <result column="syllable" property="syllable" jdbcType="VARCHAR" />
    <result column="word_chinese" property="wordChinese" jdbcType="VARCHAR" />
    <result column="fault_time" property="faultTime" jdbcType="INTEGER" />
    <result column="push" property="push" jdbcType="TIMESTAMP" />
    <result column="memory_strength" property="memoryStrength" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="allModel">
    <if test="model == 0">
      capacity_picture
    </if>
    <if test="model == 1">
      capacity_memory
    </if>
    <if test="model == 2">
      capacity_listen
    </if>
    <if test="model == 3">
      capacity_write
    </if>
    <if test="model == 4">
      sentence_listen
    </if>
    <if test="model == 5">
      sentence_translate
    </if>
    <if test="model == 6">
      sentence_write
    </if>
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
    <sql id="Base_Column_List">
        id, student_id, course_id, unit_id, vocabulary_id, word, syllable, word_chinese,
        fault_time, push, memory_strength
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhidejiaoyu.common.pojo.CapacityPictureExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from capacity_picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from capacity_picture
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from capacity_picture
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhidejiaoyu.common.pojo.CapacityPictureExample" >
    delete from capacity_picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <delete id="deleteAllMemory" parameterType="map">
       delete from <include refid="allModel" />
       where course_id = #{courseId} and student_id = #{studentId}
    </delete>
  <insert id="insertSelective" parameterType="com.zhidejiaoyu.common.pojo.CapacityPicture" >
    insert into capacity_picture
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="unitId != null" >
        unit_id,
      </if>
      <if test="vocabularyId != null" >
        vocabulary_id,
      </if>
      <if test="word != null" >
        word,
      </if>
      <if test="syllable != null" >
        syllable,
      </if>
      <if test="wordChinese != null" >
        word_chinese,
      </if>
      <if test="faultTime != null" >
        fault_time,
      </if>
      <if test="push != null" >
        push,
      </if>
      <if test="memoryStrength != null" >
        memory_strength,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="unitId != null" >
        #{unitId,jdbcType=BIGINT},
      </if>
      <if test="vocabularyId != null" >
        #{vocabularyId,jdbcType=BIGINT},
      </if>
      <if test="word != null" >
        #{word,jdbcType=VARCHAR},
      </if>
      <if test="syllable != null" >
        #{syllable,jdbcType=VARCHAR},
      </if>
      <if test="wordChinese != null" >
        #{wordChinese,jdbcType=VARCHAR},
      </if>
      <if test="faultTime != null" >
        #{faultTime,jdbcType=INTEGER},
      </if>
      <if test="push != null" >
        #{push,jdbcType=TIMESTAMP},
      </if>
      <if test="memoryStrength != null" >
        #{memoryStrength,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhidejiaoyu.common.pojo.CapacityPictureExample" resultType="java.lang.Integer" >
    select count(*) from capacity_picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update capacity_picture
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.unitId != null" >
        unit_id = #{record.unitId,jdbcType=BIGINT},
      </if>
      <if test="record.vocabularyId != null" >
        vocabulary_id = #{record.vocabularyId,jdbcType=BIGINT},
      </if>
      <if test="record.word != null" >
        word = #{record.word,jdbcType=VARCHAR},
      </if>
      <if test="record.syllable != null" >
        syllable = #{record.syllable,jdbcType=VARCHAR},
      </if>
      <if test="record.wordChinese != null" >
        word_chinese = #{record.wordChinese,jdbcType=VARCHAR},
      </if>
      <if test="record.faultTime != null" >
        fault_time = #{record.faultTime,jdbcType=INTEGER},
      </if>
      <if test="record.push != null" >
        push = #{record.push,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memoryStrength != null" >
        memory_strength = #{record.memoryStrength,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update capacity_picture
    set id = #{record.id,jdbcType=BIGINT},
    student_id = #{record.studentId,jdbcType=BIGINT},
    course_id = #{record.courseId,jdbcType=BIGINT},
    unit_id = #{record.unitId,jdbcType=BIGINT},
    vocabulary_id = #{record.vocabularyId,jdbcType=BIGINT},
    word = #{record.word,jdbcType=VARCHAR},
    syllable = #{record.syllable,jdbcType=VARCHAR},
    word_chinese = #{record.wordChinese,jdbcType=VARCHAR},
    fault_time = #{record.faultTime,jdbcType=INTEGER},
    push = #{record.push,jdbcType=TIMESTAMP},
    memory_strength = #{record.memoryStrength,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhidejiaoyu.common.pojo.CapacityPicture" >
    update capacity_picture
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="unitId != null" >
        unit_id = #{unitId,jdbcType=BIGINT},
      </if>
      <if test="vocabularyId != null" >
        vocabulary_id = #{vocabularyId,jdbcType=BIGINT},
      </if>
      <if test="word != null" >
        word = #{word,jdbcType=VARCHAR},
      </if>
      <if test="syllable != null" >
        syllable = #{syllable,jdbcType=VARCHAR},
      </if>
      <if test="wordChinese != null" >
        word_chinese = #{wordChinese,jdbcType=VARCHAR},
      </if>
      <if test="faultTime != null" >
        fault_time = #{faultTime,jdbcType=INTEGER},
      </if>
      <if test="push != null" >
        push = #{push,jdbcType=TIMESTAMP},
      </if>
      <if test="memoryStrength != null" >
        memory_strength = #{memoryStrength,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhidejiaoyu.common.pojo.CapacityPicture" >
    update capacity_picture
    set student_id    = #{studentId,jdbcType=BIGINT},
      course_id       = #{courseId,jdbcType=BIGINT},
      unit_id         = #{unitId,jdbcType=BIGINT},
      vocabulary_id   = #{vocabularyId,jdbcType=BIGINT},
      word            = #{word,jdbcType=VARCHAR},
      syllable        = #{syllable,jdbcType=VARCHAR},
      word_chinese    = #{wordChinese,jdbcType=VARCHAR},
      fault_time      = #{faultTime,jdbcType=INTEGER},
      push            = #{push,jdbcType=TIMESTAMP},
      memory_strength = #{memoryStrength,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectNeedReviewWord" resultType="java.util.Map" parameterType="map">
    select a.id, a.word, b.word_chinese, b.memory_strength, a.recordpicurl, b.fault_time, b.unit_id, a.sound_mark
    from vocabulary a
           INNER JOIN capacity_picture b on a.id = b.vocabulary_id and b.unit_id = #{unidId}
      and b.student_id = #{studentId} and b.push &lt; #{s} and b.memory_strength &lt; 1 and a.delStatus = 1
    ORDER BY b.push asc
    LIMIT 0,1
  </select>

  <select id="selectByUnitIdAndId" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List"/>
    from capacity_picture where student_id = #{studentId} and unit_id =
    #{unitId} and vocabulary_id =#{correctWordId}
  </select>
    <select id="selectNeedReviewWordCourse" resultType="java.util.Map" parameterType="map">
      SELECT
          a.id,
          b.word,
          b.word_chinese,
          b.memory_strength,
          a.recordpicurl,
          b.fault_time,
          b.unit_id
      FROM
          vocabulary a
      INNER JOIN capacity_picture b ON a.id = b.vocabulary_id
      AND b.course_id = #{course_id}
      AND b.student_id = #{studentId} and b.push &lt; #{s} and b.memory_strength &lt; 1 and a.delStatus = 1 ORDER BY b.push asc LIMIT 0,1
    </select>
    <select id="selectByUnitIdAndStudentId" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from capacity_picture where memory_strength &lt; 1 and student_id = #{studentId} and unit_id = #{unitId} order
        by push asc
    </select>
    <select id="selectByCourseIdAndStudentId" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from capacity_picture where memory_strength &lt; 1 and student_id = #{studentId} and course_id = #{courseId}
        order
        by push asc
    </select>
    <select id="countNeedReviewByStudentIdAndUnitId" resultType="java.lang.Integer" parameterType="map">
        select count(cp.id)
        from capacity_picture cp, vocabulary v
        where cp.vocabulary_id = v.id and v.delStatus = 1 and
              cp.student_id = #{studentId} and cp.unit_id = #{unitId} and
              cp.memory_strength &gt; 0 and cp.push &lt; now()
    </select>
    <select id="countNeedReviewByStudentIdAndCourseId" resultType="java.lang.Integer" parameterType="map">
        select count(cp.id)
        from capacity_picture cp, vocabulary v
        where cp.vocabulary_id = v.id and v.delStatus = 1 and
              cp.student_id = #{studentId} and cp.course_id = #{courseId} and
              cp.memory_strength &lt; 1 and cp.push &lt; now()
    </select>
</mapper>